#include "Chunk.h"

#include <vector>

using namespace DirectX;

// Should be noted that I pulled the Perlin Noise script from the tutorial: 
// https://solarianprogrammer.com/2012/07/18/perlin-noise-cpp-11/
// Which has a link to the github repo at the top

Chunk::Chunk(
	XMFLOAT3 _position,
	XMINT2 _size,
	Microsoft::WRL::ComPtr<ID3D11Device> _device,
	Microsoft::WRL::ComPtr<ID3D11DeviceContext> _deviceContext,
	std::shared_ptr<Material> material
)
{
	device = _device;
	context = _deviceContext;
	position = _position;
	size = XMINT3(_size.x, 0, _size.y);

	GenerateHeightMesh();
	chunkEntity = new GameEntity(chunkMesh, material);
}


Chunk::Chunk(
	XMFLOAT3 _position,
	XMINT3 _size,
	Microsoft::WRL::ComPtr<ID3D11Device> _device,
	Microsoft::WRL::ComPtr<ID3D11DeviceContext> _deviceContext,
	std::shared_ptr<Material> material
)
{
	device = _device;
	context = _deviceContext;
	position = _position;
	size = _size;



	GenerateMarchingCubesMesh();
	chunkEntity = new GameEntity(chunkMesh, material);
}

Chunk::~Chunk()
{
	delete chunkMesh;
	delete chunkEntity;
}

GameEntity* Chunk::GetGameEntity()
{
	return chunkEntity;
}

void Chunk::GenerateHeightMesh()
{
	PerlinNoise pn;

	// Setup the basic objects (I think)
	std::vector<Vertex> vertices;
	std::vector<UINT> indices;

	for (int i = 0; i < size.x; i++) {
		for (int k = 0; k < size.z; k++) {
			float x = position.x + i;
			x -= (float)(size.x - 1) / 2;

			float z = position.z + k;
			z -= (float)(size.z - 1) / 2;

			float y = position.y;
			y += pn.noise(x * 0.5f, z * 0.5f, 0.0f) * 1.0f;

			Vertex v;
			v.Position = XMFLOAT3(x, y, z);
			v.UV = XMFLOAT2((float)i / size.x, (float)k / size.z);
			v.Tangent = XMFLOAT3(1, 0, 0);
			v.Normal = XMFLOAT3(0, 0, 0);

			vertices.push_back(v);

			if (i > 0 && k > 0) {
				// We can add indices
				int vCount = vertices.size() - 1;

				// First Triangle
				indices.push_back(vCount);
				indices.push_back(vCount - 1 - size.x);
				indices.push_back(vCount - size.x);

				// For each triangle do the cross product to find the normal
				XMFLOAT3 normal;

				XMVECTOR v0 = XMLoadFloat3(&vertices.at(vCount).Position);
				XMVECTOR v1 = XMLoadFloat3(&vertices.at(vCount - 1 - size.x).Position);
				XMVECTOR v2 = XMLoadFloat3(&vertices.at(vCount - size.x).Position);
				XMVECTOR normalVector = XMVector3Cross(v1 - v0, v2 - v0);

				XMStoreFloat3(&vertices.at(vCount).Normal, XMVector3Normalize(XMLoadFloat3(&vertices.at(vCount).Normal) + normalVector));
				XMStoreFloat3(&vertices.at(vCount - 1 - size.x).Normal, XMVector3Normalize(XMLoadFloat3(&vertices.at(vCount - 1 - size.x).Normal) + normalVector));
				XMStoreFloat3(&vertices.at(vCount - size.x).Normal, XMVector3Normalize(XMLoadFloat3(&vertices.at(vCount - size.x).Normal) + normalVector));

				// Second Triangle
				indices.push_back(vCount);
				indices.push_back(vCount - 1);
				indices.push_back(vCount - 1 - size.x);

				v0 = XMLoadFloat3(&vertices.at(vCount).Position);
				v1 = XMLoadFloat3(&vertices.at(vCount - 1).Position);
				v2 = XMLoadFloat3(&vertices.at(vCount - 1 - size.x).Position);
				normalVector = XMVector3Cross(v1 - v0, v2 - v0);

				XMStoreFloat3(&vertices.at(vCount).Normal, XMVector3Normalize(XMLoadFloat3(&vertices.at(vCount).Normal) + normalVector));
				XMStoreFloat3(&vertices.at(vCount - 1).Normal, XMVector3Normalize(XMLoadFloat3(&vertices.at(vCount - 1).Normal) + normalVector));
				XMStoreFloat3(&vertices.at(vCount - 1 - size.x).Normal, XMVector3Normalize(XMLoadFloat3(&vertices.at(vCount - 1 - size.x).Normal) + normalVector));
			}
		}
	}

	chunkMesh = new Mesh(vertices.data(), vertices.size(), indices.data(), indices.size(), device, context);
}

// Im 90% certain this is bad practice...
// Also should probably put this on the HEAP but whatever

int triTable[256][16] = {
        {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 8, 3, 9, 8, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 8, 3, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {9, 2, 10, 0, 2, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {2, 8, 3, 2, 10, 8, 10, 9, 8, -1, -1, -1, -1, -1, -1, -1},
        {3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 11, 2, 8, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 9, 0, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 11, 2, 1, 9, 11, 9, 8, 11, -1, -1, -1, -1, -1, -1, -1},
        {3, 10, 1, 11, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 10, 1, 0, 8, 10, 8, 11, 10, -1, -1, -1, -1, -1, -1, -1},
        {3, 9, 0, 3, 11, 9, 11, 10, 9, -1, -1, -1, -1, -1, -1, -1},
        {9, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {4, 3, 0, 7, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 1, 9, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {4, 1, 9, 4, 7, 1, 7, 3, 1, -1, -1, -1, -1, -1, -1, -1},
        {1, 2, 10, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {3, 4, 7, 3, 0, 4, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1},
        {9, 2, 10, 9, 0, 2, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1},
        {2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, -1, -1, -1, -1},
        {8, 4, 7, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {11, 4, 7, 11, 2, 4, 2, 0, 4, -1, -1, -1, -1, -1, -1, -1},
        {9, 0, 1, 8, 4, 7, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1},
        {4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, -1, -1, -1, -1},
        {3, 10, 1, 3, 11, 10, 7, 8, 4, -1, -1, -1, -1, -1, -1, -1},
        {1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, -1, -1, -1, -1},
        {4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, -1, -1, -1, -1},
        {4, 7, 11, 4, 11, 9, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1},
        {9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {9, 5, 4, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 5, 4, 1, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {8, 5, 4, 8, 3, 5, 3, 1, 5, -1, -1, -1, -1, -1, -1, -1},
        {1, 2, 10, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {3, 0, 8, 1, 2, 10, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1},
        {5, 2, 10, 5, 4, 2, 4, 0, 2, -1, -1, -1, -1, -1, -1, -1},
        {2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, -1, -1, -1, -1},
        {9, 5, 4, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 11, 2, 0, 8, 11, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1},
        {0, 5, 4, 0, 1, 5, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1},
        {2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, -1, -1, -1, -1},
        {10, 3, 11, 10, 1, 3, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1},
        {4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, -1, -1, -1, -1},
        {5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, -1, -1, -1, -1},
        {5, 4, 8, 5, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1},
        {9, 7, 8, 5, 7, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {9, 3, 0, 9, 5, 3, 5, 7, 3, -1, -1, -1, -1, -1, -1, -1},
        {0, 7, 8, 0, 1, 7, 1, 5, 7, -1, -1, -1, -1, -1, -1, -1},
        {1, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {9, 7, 8, 9, 5, 7, 10, 1, 2, -1, -1, -1, -1, -1, -1, -1},
        {10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, -1, -1, -1, -1},
        {8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, -1, -1, -1, -1},
        {2, 10, 5, 2, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1},
        {7, 9, 5, 7, 8, 9, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1},
        {9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, -1, -1, -1, -1},
        {2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, -1, -1, -1, -1},
        {11, 2, 1, 11, 1, 7, 7, 1, 5, -1, -1, -1, -1, -1, -1, -1},
        {9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, -1, -1, -1, -1},
        {5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, -1},
        {11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0, -1},
        {11, 10, 5, 7, 11, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 8, 3, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {9, 0, 1, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 8, 3, 1, 9, 8, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1},
        {1, 6, 5, 2, 6, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 6, 5, 1, 2, 6, 3, 0, 8, -1, -1, -1, -1, -1, -1, -1},
        {9, 6, 5, 9, 0, 6, 0, 2, 6, -1, -1, -1, -1, -1, -1, -1},
        {5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1, -1, -1, -1},
        {2, 3, 11, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {11, 0, 8, 11, 2, 0, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1},
        {0, 1, 9, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1},
        {5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, -1, -1, -1, -1},
        {6, 3, 11, 6, 5, 3, 5, 1, 3, -1, -1, -1, -1, -1, -1, -1},
        {0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, -1, -1, -1, -1},
        {3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, -1, -1, -1, -1},
        {6, 5, 9, 6, 9, 11, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1},
        {5, 10, 6, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {4, 3, 0, 4, 7, 3, 6, 5, 10, -1, -1, -1, -1, -1, -1, -1},
        {1, 9, 0, 5, 10, 6, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1},
        {10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, -1, -1, -1, -1},
        {6, 1, 2, 6, 5, 1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1},
        {1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, -1, -1, -1, -1},
        {8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, -1, -1, -1, -1},
        {7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9, -1},
        {3, 11, 2, 7, 8, 4, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1},
        {5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, -1, -1, -1, -1},
        {0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1},
        {9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, -1},
        {8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, -1, -1, -1, -1},
        {5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11, -1},
        {0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7, -1},
        {6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, -1, -1, -1, -1},
        {10, 4, 9, 6, 4, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {4, 10, 6, 4, 9, 10, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1},
        {10, 0, 1, 10, 6, 0, 6, 4, 0, -1, -1, -1, -1, -1, -1, -1},
        {8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, -1, -1, -1, -1},
        {1, 4, 9, 1, 2, 4, 2, 6, 4, -1, -1, -1, -1, -1, -1, -1},
        {3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, -1, -1, -1, -1},
        {0, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {8, 3, 2, 8, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1},
        {10, 4, 9, 10, 6, 4, 11, 2, 3, -1, -1, -1, -1, -1, -1, -1},
        {0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, -1, -1, -1, -1},
        {3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, -1, -1, -1, -1},
        {6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1, -1},
        {9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, -1, -1, -1, -1},
        {8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, -1},
        {3, 11, 6, 3, 6, 0, 0, 6, 4, -1, -1, -1, -1, -1, -1, -1},
        {6, 4, 8, 11, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {7, 10, 6, 7, 8, 10, 8, 9, 10, -1, -1, -1, -1, -1, -1, -1},
        {0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, -1, -1, -1, -1},
        {10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, -1, -1, -1, -1},
        {10, 6, 7, 10, 7, 1, 1, 7, 3, -1, -1, -1, -1, -1, -1, -1},
        {1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1, -1, -1, -1},
        {2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9, -1},
        {7, 8, 0, 7, 0, 6, 6, 0, 2, -1, -1, -1, -1, -1, -1, -1},
        {7, 3, 2, 6, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, -1, -1, -1, -1},
        {2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7, -1},
        {1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, -1},
        {11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, -1, -1, -1, -1},
        {8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6, -1},
        {0, 9, 1, 11, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, -1, -1, -1, -1},
        {7, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {3, 0, 8, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 1, 9, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {8, 1, 9, 8, 3, 1, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1},
        {10, 1, 2, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 2, 10, 3, 0, 8, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1},
        {2, 9, 0, 2, 10, 9, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1},
        {6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, -1, -1, -1, -1},
        {7, 2, 3, 6, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {7, 0, 8, 7, 6, 0, 6, 2, 0, -1, -1, -1, -1, -1, -1, -1},
        {2, 7, 6, 2, 3, 7, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1},
        {1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, -1, -1, -1, -1},
        {10, 7, 6, 10, 1, 7, 1, 3, 7, -1, -1, -1, -1, -1, -1, -1},
        {10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, -1, -1, -1, -1},
        {0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, -1, -1, -1, -1},
        {7, 6, 10, 7, 10, 8, 8, 10, 9, -1, -1, -1, -1, -1, -1, -1},
        {6, 8, 4, 11, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {3, 6, 11, 3, 0, 6, 0, 4, 6, -1, -1, -1, -1, -1, -1, -1},
        {8, 6, 11, 8, 4, 6, 9, 0, 1, -1, -1, -1, -1, -1, -1, -1},
        {9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, -1, -1, -1, -1},
        {6, 8, 4, 6, 11, 8, 2, 10, 1, -1, -1, -1, -1, -1, -1, -1},
        {1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, -1, -1, -1, -1},
        {4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, -1, -1, -1, -1},
        {10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, -1},
        {8, 2, 3, 8, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1},
        {0, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, -1, -1, -1, -1},
        {1, 9, 4, 1, 4, 2, 2, 4, 6, -1, -1, -1, -1, -1, -1, -1},
        {8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, -1, -1, -1, -1},
        {10, 1, 0, 10, 0, 6, 6, 0, 4, -1, -1, -1, -1, -1, -1, -1},
        {4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, -1},
        {10, 9, 4, 6, 10, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {4, 9, 5, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 8, 3, 4, 9, 5, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1},
        {5, 0, 1, 5, 4, 0, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1},
        {11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, -1, -1, -1, -1},
        {9, 5, 4, 10, 1, 2, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1},
        {6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, -1, -1, -1, -1},
        {7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, -1, -1, -1, -1},
        {3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6, -1},
        {7, 2, 3, 7, 6, 2, 5, 4, 9, -1, -1, -1, -1, -1, -1, -1},
        {9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, -1, -1, -1, -1},
        {3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, -1, -1, -1, -1},
        {6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, -1},
        {9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, -1, -1, -1, -1},
        {1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4, -1},
        {4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, -1},
        {7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, -1, -1, -1, -1},
        {6, 9, 5, 6, 11, 9, 11, 8, 9, -1, -1, -1, -1, -1, -1, -1},
        {3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, -1, -1, -1, -1},
        {0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, -1, -1, -1, -1},
        {6, 11, 3, 6, 3, 5, 5, 3, 1, -1, -1, -1, -1, -1, -1, -1},
        {1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, -1, -1, -1, -1},
        {0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, -1},
        {11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, -1},
        {6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, -1, -1, -1, -1},
        {5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, -1, -1, -1, -1},
        {9, 5, 6, 9, 6, 0, 0, 6, 2, -1, -1, -1, -1, -1, -1, -1},
        {1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8, -1},
        {1, 5, 6, 2, 1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, -1},
        {10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, -1, -1, -1, -1},
        {0, 3, 8, 5, 6, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {10, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {11, 5, 10, 7, 5, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {11, 5, 10, 11, 7, 5, 8, 3, 0, -1, -1, -1, -1, -1, -1, -1},
        {5, 11, 7, 5, 10, 11, 1, 9, 0, -1, -1, -1, -1, -1, -1, -1},
        {10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, -1, -1, -1, -1},
        {11, 1, 2, 11, 7, 1, 7, 5, 1, -1, -1, -1, -1, -1, -1, -1},
        {0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, -1, -1, -1, -1},
        {9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, -1, -1, -1, -1},
        {7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, -1},
        {2, 5, 10, 2, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1},
        {8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, -1, -1, -1, -1},
        {9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, -1, -1, -1, -1},
        {9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2, -1},
        {1, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 8, 7, 0, 7, 1, 1, 7, 5, -1, -1, -1, -1, -1, -1, -1},
        {9, 0, 3, 9, 3, 5, 5, 3, 7, -1, -1, -1, -1, -1, -1, -1},
        {9, 8, 7, 5, 9, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {5, 8, 4, 5, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1},
        {5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, -1, -1, -1, -1},
        {0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, -1, -1, -1, -1},
        {10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4, -1},
        {2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, -1, -1, -1, -1},
        {0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, -1},
        {0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5, -1},
        {9, 4, 5, 2, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, -1, -1, -1, -1},
        {5, 10, 2, 5, 2, 4, 4, 2, 0, -1, -1, -1, -1, -1, -1, -1},
        {3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, -1},
        {5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, -1, -1, -1, -1},
        {8, 4, 5, 8, 5, 3, 3, 5, 1, -1, -1, -1, -1, -1, -1, -1},
        {0, 4, 5, 1, 0, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, -1, -1, -1, -1},
        {9, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {4, 11, 7, 4, 9, 11, 9, 10, 11, -1, -1, -1, -1, -1, -1, -1},
        {0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, -1, -1, -1, -1},
        {1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, -1, -1, -1, -1},
        {3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4, -1},
        {4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, -1, -1, -1, -1},
        {9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, -1},
        {11, 7, 4, 11, 4, 2, 2, 4, 0, -1, -1, -1, -1, -1, -1, -1},
        {11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, -1, -1, -1, -1},
        {2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, -1, -1, -1, -1},
        {9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, -1},
        {3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10, -1},
        {1, 10, 2, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {4, 9, 1, 4, 1, 7, 7, 1, 3, -1, -1, -1, -1, -1, -1, -1},
        {4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, -1, -1, -1, -1},
        {4, 0, 3, 7, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {4, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {9, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {3, 0, 9, 3, 9, 11, 11, 9, 10, -1, -1, -1, -1, -1, -1, -1},
        {0, 1, 10, 0, 10, 8, 8, 10, 11, -1, -1, -1, -1, -1, -1, -1},
        {3, 1, 10, 11, 3, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 2, 11, 1, 11, 9, 9, 11, 8, -1, -1, -1, -1, -1, -1, -1},
        {3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, -1, -1, -1, -1},
        {0, 2, 11, 8, 0, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {3, 2, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {2, 3, 8, 2, 8, 10, 10, 8, 9, -1, -1, -1, -1, -1, -1, -1},
        {9, 10, 2, 0, 9, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, -1, -1, -1, -1},
        {1, 10, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 3, 8, 9, 1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 9, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}
};

XMFLOAT2 uvs[256][16] = {
    { XMFLOAT2(0.6482264f, 0.3232234f), XMFLOAT2(0.6482264f, 0.3232234f), XMFLOAT2(0.6482264f, 0.3232233f), XMFLOAT2(0.3517736f, 0.3232234f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3517736f, 0.6767767f), XMFLOAT2(0.5f, 0.8535534f), XMFLOAT2(0.5f, 0.8535534f), XMFLOAT2(0.4999999f, 0.8535534f), XMFLOAT2(0.5f, 0.8535534f)},
    { XMFLOAT2(0.3517736f, 0.3232233f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6482264f, 0.3232233f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.5f, 0.8535534f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f)},
    { XMFLOAT2(0.6482264f, 0.3232232f), XMFLOAT2(0.3517736f, 0.3232232f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6482264f, 0.3232233f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.5f, 0.8535534f), XMFLOAT2(0.5f, 0.8535533f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f)},
    { XMFLOAT2(0.6482264f, 0.3232232f), XMFLOAT2(0.2903761f, 0.1938137f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.7096237f, 0.1938138f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.2903762f, 0.8061862f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f)},
    { XMFLOAT2(0.6482264f, 0.3232232f), XMFLOAT2(0.6482264f, 0.3232232f), XMFLOAT2(0.3517736f, 0.3232232f), XMFLOAT2(0.7096237f, 0.1938138f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.2903762f, 0.8061862f), XMFLOAT2(0.5f, 0.8535533f), XMFLOAT2(0.0f, 0.0f)},
    { XMFLOAT2(0.2484515f, 0.4999999f), XMFLOAT2(0.5f, -0.01961535f), XMFLOAT2(0.7515485f, 0.4999999f), XMFLOAT2(0.5f, 1.019615f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.3427822f, 0.8247594f), XMFLOAT2(0.2903762f, 0.8061862f), XMFLOAT2(0.6572178f, 0.1752403f), XMFLOAT2(0.0f, 0.0f)},
    { XMFLOAT2(0.7096238f, 0.1938137f), XMFLOAT2(0.5f, -0.01961535f), XMFLOAT2(0.2903762f, 0.1938137f), XMFLOAT2(0.5f, 1.019615f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.3427822f, 0.8247594f), XMFLOAT2(0.7096238f, 0.806186f), XMFLOAT2(0.2903762f, 0.806186f), XMFLOAT2(0.0f, 0.0f)},
    { XMFLOAT2(0.7096238f, 0.1938137f), XMFLOAT2(0.5f, -0.01961535f), XMFLOAT2(0.3478881f, 0.0885402f), XMFLOAT2(0.6521119f, 0.08854017f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.7556959f, 0.5902345f), XMFLOAT2(0.5f, 1.309323f), XMFLOAT2(0.244304f, 0.5902345f), XMFLOAT2(0.0f, 0.0f)},
    { XMFLOAT2(0.7096238f, 0.1938137f), XMFLOAT2(0.5f, -0.01961535f), XMFLOAT2(0.6482264f, 0.3232232f), XMFLOAT2(0.3517736f, 0.3232232f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.7556959f, 0.5902345f), XMFLOAT2(0.5f, 1.309323f), XMFLOAT2(0.244304f, 0.5902345f), XMFLOAT2(0.5f, 0.8535533f)},
    { XMFLOAT2(0.2903762f, 0.1938137f), XMFLOAT2(0.5f, -0.01961535f), XMFLOAT2(0.7096238f, 0.1938137f), XMFLOAT2(0.3517736f, 0.3232232f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.5f, 1.309323f), XMFLOAT2(0.244304f, 0.5902345f), XMFLOAT2(0.7096238f, 0.8061861f)},
    { XMFLOAT2(0.2484515f, 0.4999999f), XMFLOAT2(0.5f, -0.01961535f), XMFLOAT2(0.7515485f, 0.4999999f), XMFLOAT2(0.5f, 1.019615f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.3427822f, 0.1752403f), XMFLOAT2(0.244304f, 0.5902345f), XMFLOAT2(0.6572178f, 0.8247594f)},
    { XMFLOAT2(0.2484515f, 0.4999999f), XMFLOAT2(0.3478882f, 0.08854023f), XMFLOAT2(0.6521119f, 0.08854017f), XMFLOAT2(0.5f, 1.019615f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.5f, 1.309323f), XMFLOAT2(0.244304f, 0.5902345f), XMFLOAT2(0.244304f, 0.5902345f), XMFLOAT2(0.755696f, 0.5902345f)},
    { XMFLOAT2(0.2484515f, 0.4999999f), XMFLOAT2(0.7096238f, 0.1938137f), XMFLOAT2(0.6521119f, 0.08854017f), XMFLOAT2(0.2903763f, 0.1938137f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.5f, 1.309323f), XMFLOAT2(0.244304f, 0.5902345f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.2903762f, 0.8061861f)},
    { XMFLOAT2(0.3478881f, 0.0885402f), XMFLOAT2(0.6521118f, 0.08854017f), XMFLOAT2(0.6521119f, 0.08854017f), XMFLOAT2(0.2903763f, 0.1938137f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.244304f, 0.5902345f), XMFLOAT2(0.244304f, 0.5902345f), XMFLOAT2(0.7556959f, 0.5902345f), XMFLOAT2(0.5f, 1.309323f)},
    { XMFLOAT2(0.6521119f, 0.0885402f), XMFLOAT2(0.6521118f, 0.08854017f), XMFLOAT2(0.6521119f, 0.08854017f), XMFLOAT2(0.3478881f, 0.08854017f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.244304f, 0.5902345f), XMFLOAT2(0.7556959f, 0.5902345f), XMFLOAT2(0.5f, 1.309323f), XMFLOAT2(0.244304f, 0.5902345f)},
    { XMFLOAT2(0.6521119f, 0.0885402f), XMFLOAT2(0.6521118f, 0.08854017f), XMFLOAT2(0.6521119f, 0.08854017f), XMFLOAT2(0.3478881f, 0.08854017f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.2903763f, 0.9330125f), XMFLOAT2(0.2903762f, 0.06698713f), XMFLOAT2(0.7096238f, 0.06698713f), XMFLOAT2(0.7096237f, 0.9330125f)},
    { XMFLOAT2(0.6521119f, 0.0885402f), XMFLOAT2(0.6521118f, 0.08854017f), XMFLOAT2(0.6521119f, 0.08854017f), XMFLOAT2(0.3478881f, 0.08854017f), XMFLOAT2(0.3517736f, 0.6767768f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6482264f, 0.6767768f), XMFLOAT2(0.5f, 0.1464467f), XMFLOAT2(0.2903762f, 0.06698713f), XMFLOAT2(0.7096238f, 0.06698713f), XMFLOAT2(0.7096237f, 0.9330125f)},
    { XMFLOAT2(0.3517736f, 0.06698725f), XMFLOAT2(0.6521118f, 0.08854017f), XMFLOAT2(0.6521119f, 0.08854017f), XMFLOAT2(0.6482264f, 0.06698731f), XMFLOAT2(0.3517736f, 0.9330127f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6482264f, 0.9330127f), XMFLOAT2(0.5f, 0.1464467f), XMFLOAT2(0.2903762f, 0.06698713f), XMFLOAT2(0.7096238f, 0.06698713f), XMFLOAT2(0.7096237f, 0.9330125f)},
    { XMFLOAT2(0.4999999f, -0.01961517f), XMFLOAT2(0.3427821f, 0.1752405f), XMFLOAT2(0.6521119f, 0.08854017f), XMFLOAT2(0.6482264f, 0.06698731f), XMFLOAT2(0.4999999f, 1.019615f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6572178f, 0.8247595f), XMFLOAT2(0.7515485f, 0.5f), XMFLOAT2(0.2484514f, 0.5f), XMFLOAT2(0.7096238f, 0.06698713f), XMFLOAT2(0.7096237f, 0.9330125f)},
    { XMFLOAT2(0.4999999f, -0.01961517f), XMFLOAT2(0.3747977f, 0.03071147f), XMFLOAT2(0.6521119f, 0.08854017f), XMFLOAT2(0.8063936f, -0.004412711f), XMFLOAT2(0.4390335f, 1.002164f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6935241f, 0.8568105f), XMFLOAT2(0.7515485f, 0.5f), XMFLOAT2(0.2494252f, 0.5107229f), XMFLOAT2(0.7096238f, 0.06698713f), XMFLOAT2(0.7096237f, 0.9330125f)},
    { XMFLOAT2(0.4999999f, -0.01961517f), XMFLOAT2(0.3747977f, 0.03071147f), XMFLOAT2(0.6031151f, 0.03899643f), XMFLOAT2(0.8063936f, -0.004412711f), XMFLOAT2(0.4390335f, 1.002164f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6935241f, 0.8568105f), XMFLOAT2(0.72902f, 0.8382802f), XMFLOAT2(0.2494252f, 0.5107229f), XMFLOAT2(0.4739512f, 0.3218581f), XMFLOAT2(0.7096237f, 0.9330125f)},
    { XMFLOAT2(0.2180153f, 0.2265572f), XMFLOAT2(0.3723477f, 0.1449911f), XMFLOAT2(0.6276523f, 0.1449911f), XMFLOAT2(0.7819847f, 0.2265572f), XMFLOAT2(0.3462536f, 1.158245f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6537464f, 1.158245f), XMFLOAT2(0.72902f, 0.8382802f), XMFLOAT2(0.2494252f, 0.5107229f), XMFLOAT2(0.5f, 0.4073713f), XMFLOAT2(0.7096237f, 0.9330125f)},
    { XMFLOAT2(0.7344636f, 0.07633495f), XMFLOAT2(0.3723477f, 0.1449911f), XMFLOAT2(0.2698943f, -0.05517441f), XMFLOAT2(0.7819847f, 0.2265572f), XMFLOAT2(0.6061398f, 0.8840466f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.5410681f, 0.5371943f), XMFLOAT2(0.7086558f, 0.4010563f), XMFLOAT2(0.5080053f, 1.143263f), XMFLOAT2(0.1464226f, 0.5265462f), XMFLOAT2(0.7096237f, 0.9330125f)},
    { XMFLOAT2(0.7344636f, 0.07633495f), XMFLOAT2(0.3723477f, 0.1449911f), XMFLOAT2(0.4710608f, -0.1094478f), XMFLOAT2(0.7977885f, -0.001612723f), XMFLOAT2(0.5289392f, 1.109448f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6482031f, 0.689586f), XMFLOAT2(0.7086558f, 0.4010563f), XMFLOAT2(0.201761f, 1.07395f), XMFLOAT2(0.3184258f, 0.3006409f), XMFLOAT2(0.7096237f, 0.9330125f)},
    { XMFLOAT2(0.7344636f, 0.07633495f), XMFLOAT2(0.3723477f, 0.1449911f), XMFLOAT2(0.6572179f, 0.1752405f), XMFLOAT2(0.5f, -0.01961523f), XMFLOAT2(0.3427821f, 0.8247595f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.5f, 1.019615f), XMFLOAT2(0.2484515f, 0.5f), XMFLOAT2(0.201761f, 1.07395f), XMFLOAT2(0.3184258f, 0.3006409f), XMFLOAT2(0.7515485f, 0.5f)},
    { XMFLOAT2(0.1936062f, -0.004412711f), XMFLOAT2(0.3723477f, 0.1449911f), XMFLOAT2(0.6252022f, 0.03071156f), XMFLOAT2(0.5f, -0.01961523f), XMFLOAT2(0.3064758f, 0.8568107f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.5609664f, 1.002164f), XMFLOAT2(0.2484515f, 0.5f), XMFLOAT2(0.201761f, 1.07395f), XMFLOAT2(0.3184258f, 0.3006409f), XMFLOAT2(0.7505748f, 0.510723f)},
    { XMFLOAT2(0.2590206f, 0.2126048f), XMFLOAT2(0.3756959f, 0.05526009f), XMFLOAT2(0.6243041f, 0.05526009f), XMFLOAT2(0.7409794f, 0.2126048f), XMFLOAT2(0.3756959f, 0.9447399f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6243041f, 0.9447399f), XMFLOAT2(0.5f, 1.07479f), XMFLOAT2(0.2513918f, 0.4999999f), XMFLOAT2(0.3184258f, 0.3006409f), XMFLOAT2(0.7486081f, 0.4999999f)},
    { XMFLOAT2(0.2590206f, 0.2126048f), XMFLOAT2(0.3517736f, -0.03033012f), XMFLOAT2(0.6482264f, -0.03033012f), XMFLOAT2(0.7409794f, 0.2126048f), XMFLOAT2(0.3517736f, 1.03033f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6482264f, 1.03033f), XMFLOAT2(0.5f, 1.07479f), XMFLOAT2(0.2035472f, 0.4999999f), XMFLOAT2(0.3184258f, 0.3006409f), XMFLOAT2(0.7964528f, 0.5f)},
    { XMFLOAT2(0.2590206f, 0.2126048f), XMFLOAT2(0.7301056f, -0.05517429f), XMFLOAT2(0.6482264f, -0.03033012f), XMFLOAT2(0.2655364f, 0.07633507f), XMFLOAT2(0.4589318f, 0.5371946f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.3938601f, 0.8840468f), XMFLOAT2(0.2913442f, 0.4010565f), XMFLOAT2(0.2035472f, 0.4999999f), XMFLOAT2(0.8535773f, 0.5265464f), XMFLOAT2(0.4919947f, 1.143264f)},
    { XMFLOAT2(0.2022115f, -0.001612723f), XMFLOAT2(0.5289392f, -0.1094479f), XMFLOAT2(0.6482264f, -0.03033012f), XMFLOAT2(0.2655364f, 0.07633507f), XMFLOAT2(0.3517969f, 0.6895859f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.4710608f, 1.109447f), XMFLOAT2(0.2913442f, 0.4010565f), XMFLOAT2(0.2035472f, 0.4999999f), XMFLOAT2(0.6815742f, 0.3006408f), XMFLOAT2(0.798239f, 1.07395f)},
    { XMFLOAT2(0.7326114f, -0.02573752f), XMFLOAT2(0.5289392f, -0.1094479f), XMFLOAT2(0.6482264f, -0.03033012f), XMFLOAT2(0.2673886f, -0.02573746f), XMFLOAT2(0.5971785f, 0.5413676f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.4028216f, 0.5413676f), XMFLOAT2(0.5f, 0.1720724f), XMFLOAT2(0.8226748f, 0.6479837f), XMFLOAT2(0.5f, 1.645048f), XMFLOAT2(0.1773253f, 0.6479836f)},
    { XMFLOAT2(0.7326114f, -0.02573752f), XMFLOAT2(0.5289392f, -0.1094479f), XMFLOAT2(0.6482264f, -0.03033012f), XMFLOAT2(0.2673886f, -0.02573746f), XMFLOAT2(0.3554656f, 0.890963f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6445345f, 0.890963f), XMFLOAT2(0.5f, 0.1720724f), XMFLOAT2(0.1473339f, 0.375545f), XMFLOAT2(0.5f, 0.03248975f), XMFLOAT2(0.8526661f, 0.3755451f)},
    { XMFLOAT2(0.7326114f, -0.02573752f), XMFLOAT2(0.5289392f, -0.1094479f), XMFLOAT2(0.6482264f, -0.03033012f), XMFLOAT2(0.2673886f, -0.02573746f), XMFLOAT2(0.6482264f, 0.6767768f), XMFLOAT2(0.3517736f, 0.6767768f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6445345f, 0.890963f), XMFLOAT2(0.5f, 0.1720724f), XMFLOAT2(0.5f, 0.1464467f), XMFLOAT2(0.5f, 0.03248975f), XMFLOAT2(0.8526661f, 0.3755451f)},
    { XMFLOAT2(0.4999999f, -0.01961517f), XMFLOAT2(0.5289392f, -0.1094479f), XMFLOAT2(0.6482264f, -0.03033012f), XMFLOAT2(0.6572178f, 0.1752405f), XMFLOAT2(0.4999999f, 1.019615f), XMFLOAT2(0.3427821f, 0.8247595f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6445345f, 0.890963f), XMFLOAT2(0.7515485f, 0.5f), XMFLOAT2(0.2484514f, 0.5f), XMFLOAT2(0.5f, 0.03248975f), XMFLOAT2(0.8526661f, 0.3755451f)},
    { XMFLOAT2(0.6482264f, 0.0669874f), XMFLOAT2(0.3517736f, 0.0669874f), XMFLOAT2(0.6482264f, -0.03033012f), XMFLOAT2(0.6572178f, 0.1752405f), XMFLOAT2(0.6482264f, 0.9330126f), XMFLOAT2(0.3517736f, 0.9330126f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6445345f, 0.890963f), XMFLOAT2(0.7515485f, 0.5f), XMFLOAT2(0.2484514f, 0.5f), XMFLOAT2(0.5f, 0.03248975f), XMFLOAT2(0.8526661f, 0.3755451f)},
    { XMFLOAT2(0.6482264f, 0.0669874f), XMFLOAT2(0.1936062f, -0.004412711f), XMFLOAT2(0.6482264f, -0.03033012f), XMFLOAT2(0.6252022f, 0.03071159f), XMFLOAT2(0.5609665f, 1.002164f), XMFLOAT2(0.3064758f, 0.8568107f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6445345f, 0.890963f), XMFLOAT2(0.7505748f, 0.5107229f), XMFLOAT2(0.2484514f, 0.5f), XMFLOAT2(0.5f, 0.03248975f), XMFLOAT2(0.8526661f, 0.3755451f)},
    { XMFLOAT2(0.6482264f, 0.0669874f), XMFLOAT2(0.5f, -0.01961529f), XMFLOAT2(0.3427821f, 0.1752405f), XMFLOAT2(0.6252022f, 0.03071159f), XMFLOAT2(0.6572179f, 0.8247595f), XMFLOAT2(0.5f, 1.019615f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6445345f, 0.890963f), XMFLOAT2(0.7505748f, 0.5107229f), XMFLOAT2(0.7515485f, 0.5f), XMFLOAT2(0.2484514f, 0.5f), XMFLOAT2(0.8526661f, 0.3755451f)},
    { XMFLOAT2(0.7409794f, 0.2126049f), XMFLOAT2(0.2590204f, 0.2126049f), XMFLOAT2(0.3756958f, 0.05526018f), XMFLOAT2(0.624304f, 0.05526018f), XMFLOAT2(0.6243041f, 0.9447398f), XMFLOAT2(0.3756959f, 0.9447399f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6445345f, 0.890963f), XMFLOAT2(0.7486081f, 0.4999999f), XMFLOAT2(0.4999999f, 1.07479f), XMFLOAT2(0.2513917f, 0.5f), XMFLOAT2(0.8526661f, 0.3755451f)},
    { XMFLOAT2(0.8063937f, -0.004412651f), XMFLOAT2(0.2590204f, 0.2126049f), XMFLOAT2(0.3747978f, 0.03071162f), XMFLOAT2(0.624304f, 0.05526018f), XMFLOAT2(0.6935242f, 0.8568107f), XMFLOAT2(0.4390335f, 1.002164f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6445345f, 0.890963f), XMFLOAT2(0.7486081f, 0.4999999f), XMFLOAT2(0.4999999f, 1.07479f), XMFLOAT2(0.2494252f, 0.510723f), XMFLOAT2(0.8526661f, 0.3755451f)},
    { XMFLOAT2(0.8063937f, -0.004412651f), XMFLOAT2(0.2590204f, 0.2126049f), XMFLOAT2(0.3517735f, -0.03033006f), XMFLOAT2(0.6482263f, -0.03033006f), XMFLOAT2(0.6482264f, 1.03033f), XMFLOAT2(0.3517736f, 1.03033f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6445345f, 0.890963f), XMFLOAT2(0.7964528f, 0.4999999f), XMFLOAT2(0.4999999f, 1.07479f), XMFLOAT2(0.2035471f, 0.4999999f), XMFLOAT2(0.8526661f, 0.3755451f)},
    { XMFLOAT2(0.8063937f, -0.004412651f), XMFLOAT2(0.2590204f, 0.2126049f), XMFLOAT2(0.3517735f, -0.03033006f), XMFLOAT2(0.6482263f, -0.03033006f), XMFLOAT2(0.6482264f, 1.03033f), XMFLOAT2(0.3517736f, 1.03033f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6445345f, 0.890963f), XMFLOAT2(0.7964528f, 0.4999999f), XMFLOAT2(0.5f, 1.336516f), XMFLOAT2(0.2035471f, 0.4999999f), XMFLOAT2(0.4999999f, 0.2758561f)},
    { XMFLOAT2(0.2655364f, 0.07633483f), XMFLOAT2(0.2590204f, 0.2126049f), XMFLOAT2(0.7301055f, -0.05517453f), XMFLOAT2(0.6482263f, -0.03033006f), XMFLOAT2(0.3938601f, 0.8840466f), XMFLOAT2(0.4589318f, 0.5371943f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6445345f, 0.890963f), XMFLOAT2(0.4919947f, 1.143263f), XMFLOAT2(0.2913441f, 0.4010562f), XMFLOAT2(0.2035471f, 0.4999999f), XMFLOAT2(0.8535773f, 0.5265462f)},
    { XMFLOAT2(0.7819847f, 0.2265573f), XMFLOAT2(0.2180153f, 0.2265573f), XMFLOAT2(0.3723477f, 0.1449911f), XMFLOAT2(0.6276523f, 0.1449911f), XMFLOAT2(0.6537464f, 1.158245f), XMFLOAT2(0.3462536f, 1.158245f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6445345f, 0.890963f), XMFLOAT2(0.4919947f, 1.143263f), XMFLOAT2(0.2913441f, 0.4010562f), XMFLOAT2(0.2035471f, 0.4999999f), XMFLOAT2(0.4999999f, 0.4073713f)},
    { XMFLOAT2(0.7819847f, 0.2265573f), XMFLOAT2(0.2022114f, -0.001612544f), XMFLOAT2(0.5289392f, -0.1094477f), XMFLOAT2(0.6276523f, 0.1449911f), XMFLOAT2(0.4710608f, 1.109448f), XMFLOAT2(0.3517968f, 0.689586f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6445345f, 0.890963f), XMFLOAT2(0.7982389f, 1.07395f), XMFLOAT2(0.2913441f, 0.4010562f), XMFLOAT2(0.2035471f, 0.4999999f), XMFLOAT2(0.6815742f, 0.3006409f)},
    { XMFLOAT2(0.7819847f, 0.2265573f), XMFLOAT2(0.7344636f, 0.07633501f), XMFLOAT2(0.5289392f, -0.1094477f), XMFLOAT2(0.2698944f, -0.05517435f), XMFLOAT2(0.5410682f, 0.5371945f), XMFLOAT2(0.6061399f, 0.8840468f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6445345f, 0.890963f), XMFLOAT2(0.7982389f, 1.07395f), XMFLOAT2(0.7086558f, 0.4010564f), XMFLOAT2(0.5080053f, 1.143263f), XMFLOAT2(0.1464227f, 0.5265464f)},
    { XMFLOAT2(0.2673886f, -0.0257374f), XMFLOAT2(0.7326114f, -0.0257374f), XMFLOAT2(0.5289392f, -0.1094477f), XMFLOAT2(0.2698944f, -0.05517435f), XMFLOAT2(0.4028216f, 0.5413677f), XMFLOAT2(0.5971784f, 0.5413677f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6445345f, 0.890963f), XMFLOAT2(0.1773253f, 0.6479837f), XMFLOAT2(0.5f, 0.1720724f), XMFLOAT2(0.8226746f, 0.6479837f), XMFLOAT2(0.4999999f, 1.645048f)},
    { XMFLOAT2(0.8465427f, 0.056692f), XMFLOAT2(0.7326114f, -0.0257374f), XMFLOAT2(0.5289392f, -0.1094477f), XMFLOAT2(0.5289392f, -0.1094477f), XMFLOAT2(0.6593612f, 0.7684373f), XMFLOAT2(0.4710608f, 1.109448f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6445345f, 0.890963f), XMFLOAT2(0.1773253f, 0.6479837f), XMFLOAT2(0.5f, 0.1720724f), XMFLOAT2(0.1607035f, 0.8725299f), XMFLOAT2(0.3724545f, 0.2545433f)},
    { XMFLOAT2(0.8465427f, 0.056692f), XMFLOAT2(0.7326114f, -0.0257374f), XMFLOAT2(0.5289392f, -0.1094477f), XMFLOAT2(0.5289392f, -0.1094477f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.3554655f, 0.890963f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6445345f, 0.890963f), XMFLOAT2(0.8526661f, 0.375545f), XMFLOAT2(0.5f, 0.1720724f), XMFLOAT2(0.1473339f, 0.3755451f), XMFLOAT2(0.4999999f, 0.03248978f)},
    { XMFLOAT2(0.8465427f, 0.056692f), XMFLOAT2(0.7326114f, -0.0257374f), XMFLOAT2(0.5289392f, -0.1094477f), XMFLOAT2(0.5289392f, -0.1094477f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.2903761f, 0.8061863f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.7096237f, 0.8061862f), XMFLOAT2(0.7096238f, 0.1938139f), XMFLOAT2(0.2903762f, 0.1938139f), XMFLOAT2(0.1473339f, 0.3755451f), XMFLOAT2(0.4999999f, 0.03248978f)},
    { XMFLOAT2(0.4390335f, -0.002163827f), XMFLOAT2(0.7326114f, -0.0257374f), XMFLOAT2(0.5289392f, -0.1094477f), XMFLOAT2(0.6935241f, 0.1431895f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.3747977f, 0.9692885f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.8063936f, 1.004413f), XMFLOAT2(0.7096238f, 0.1938139f), XMFLOAT2(0.2494252f, 0.4892772f), XMFLOAT2(0.1473339f, 0.3755451f), XMFLOAT2(0.4999999f, 0.03248978f)},
    { XMFLOAT2(0.5609665f, -0.002163947f), XMFLOAT2(0.3064758f, 0.1431894f), XMFLOAT2(0.5289392f, -0.1094477f), XMFLOAT2(0.6935241f, 0.1431895f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.1936062f, 1.004413f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6252022f, 0.9692884f), XMFLOAT2(0.7505748f, 0.4892771f), XMFLOAT2(0.2494252f, 0.4892772f), XMFLOAT2(0.1473339f, 0.3755451f), XMFLOAT2(0.4999999f, 0.03248978f)},
    { XMFLOAT2(0.5609665f, -0.002163947f), XMFLOAT2(0.2903761f, 0.06698731f), XMFLOAT2(0.5289392f, -0.1094477f), XMFLOAT2(0.7096237f, 0.0669874f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.2903761f, 0.9330127f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.7096237f, 0.9330126f), XMFLOAT2(0.7505748f, 0.4892771f), XMFLOAT2(0.2494252f, 0.4892772f), XMFLOAT2(0.1473339f, 0.3755451f), XMFLOAT2(0.4999999f, 0.03248978f)},
    { XMFLOAT2(0.5609665f, -0.002163947f), XMFLOAT2(0.3938601f, 0.1159533f), XMFLOAT2(0.4589318f, 0.4628055f), XMFLOAT2(0.7096237f, 0.0669874f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.2655362f, 0.9236652f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.7301056f, 1.055174f), XMFLOAT2(0.8535773f, 0.4734536f), XMFLOAT2(0.4919946f, -0.1432635f), XMFLOAT2(0.2913441f, 0.5989436f), XMFLOAT2(0.4999999f, 0.03248978f)},
    { XMFLOAT2(0.4641576f, -0.2083755f), XMFLOAT2(0.3812997f, 0.2822485f), XMFLOAT2(0.5795028f, 0.3773748f), XMFLOAT2(0.7678295f, 0.09988609f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.3393024f, 1.096643f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.9144746f, 1.260339f), XMFLOAT2(0.8535773f, 0.4734536f), XMFLOAT2(0.1552388f, 0.5101718f), XMFLOAT2(0.4504453f, 0.6775635f), XMFLOAT2(0.4999999f, 0.03248978f)},
    { XMFLOAT2(0.7126039f, -0.1611603f), XMFLOAT2(0.3812997f, 0.2822485f), XMFLOAT2(0.3941914f, 0.2138309f), XMFLOAT2(0.7678295f, 0.09988609f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.2525882f, 1.169148f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6137748f, 0.8538191f), XMFLOAT2(0.7964528f, 0.4999999f), XMFLOAT2(0.1552388f, 0.5101718f), XMFLOAT2(0.2035472f, 0.4999999f), XMFLOAT2(0.4999999f, 0.03248978f)},
    { XMFLOAT2(0.7126039f, -0.1611603f), XMFLOAT2(0.3812997f, 0.2822485f), XMFLOAT2(0.4420705f, 0.02285135f), XMFLOAT2(0.7669163f, 0.007872373f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.327316f, 1.147261f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6769902f, 0.7913769f), XMFLOAT2(0.7964528f, 0.4999999f), XMFLOAT2(0.1552388f, 0.5101718f), XMFLOAT2(0.2619076f, 0.4898111f), XMFLOAT2(0.4999999f, 0.03248978f)},
    { XMFLOAT2(0.7126039f, -0.1611603f), XMFLOAT2(0.3812997f, 0.2822485f), XMFLOAT2(0.5410682f, 0.4628055f), XMFLOAT2(0.6061399f, 0.1159533f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.2698944f, 1.055174f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.7344636f, 0.9236651f), XMFLOAT2(0.5080053f, -0.1432635f), XMFLOAT2(0.1464227f, 0.4734536f), XMFLOAT2(0.2619076f, 0.4898111f), XMFLOAT2(0.7086558f, 0.5989436f)},
    { XMFLOAT2(0.287396f, -0.1611602f), XMFLOAT2(0.3812997f, 0.2822485f), XMFLOAT2(0.6058086f, 0.2138309f), XMFLOAT2(0.6061399f, 0.1159533f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.3862252f, 0.8538192f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.7474117f, 1.169148f), XMFLOAT2(0.5080053f, -0.1432635f), XMFLOAT2(0.2035472f, 0.4999999f), XMFLOAT2(0.2619076f, 0.4898111f), XMFLOAT2(0.7964528f, 0.4999999f)},
    { XMFLOAT2(0.5358425f, -0.2083755f), XMFLOAT2(0.2321706f, 0.09988615f), XMFLOAT2(0.4204973f, 0.3773749f), XMFLOAT2(0.6187004f, 0.2822485f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.08552545f, 1.260339f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6606977f, 1.096643f), XMFLOAT2(0.8447614f, 0.5101718f), XMFLOAT2(0.2035472f, 0.4999999f), XMFLOAT2(0.2619076f, 0.4898111f), XMFLOAT2(0.5495548f, 0.6775635f)},
    { XMFLOAT2(0.5358425f, -0.2083755f), XMFLOAT2(0.2330835f, 0.007872283f), XMFLOAT2(0.5579293f, 0.02285126f), XMFLOAT2(0.6187004f, 0.2822485f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.3230097f, 0.7913769f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6726838f, 1.147261f), XMFLOAT2(0.8447614f, 0.5101718f), XMFLOAT2(0.2035472f, 0.4999999f), XMFLOAT2(0.2619076f, 0.4898111f), XMFLOAT2(0.7380923f, 0.4898111f)},
    { XMFLOAT2(0.5358425f, -0.2083755f), XMFLOAT2(0.2330835f, 0.007872283f), XMFLOAT2(0.5579293f, 0.02285126f), XMFLOAT2(0.8510444f, -0.07792079f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.3230097f, 0.7913769f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6726838f, 1.147261f), XMFLOAT2(0.7018827f, 1.880633f), XMFLOAT2(0.00678125f, 0.7148279f), XMFLOAT2(0.4137049f, 0.3725355f), XMFLOAT2(0.7380923f, 0.4898111f)},
    { XMFLOAT2(0.1787866f, -0.09008062f), XMFLOAT2(0.4557378f, 0.06421411f), XMFLOAT2(0.5579293f, 0.02285126f), XMFLOAT2(0.8510444f, -0.07792079f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.4654129f, 0.7134539f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.6561024f, 1.481294f), XMFLOAT2(0.7018827f, 1.880633f), XMFLOAT2(0.2853086f, 0.4600787f), XMFLOAT2(0.5985888f, 0.4041195f), XMFLOAT2(0.9900271f, 0.7056698f)},
    { XMFLOAT2(0.8212134f, -0.09008056f), XMFLOAT2(0.4557378f, 0.06421411f), XMFLOAT2(0.5579293f, 0.02285126f), XMFLOAT2(0.5442622f, 0.0642142f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.3438976f, 1.481294f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.5345871f, 0.7134539f), XMFLOAT2(0.7146914f, 0.4600788f), XMFLOAT2(0.2853086f, 0.4600787f), XMFLOAT2(0.009972811f, 0.7056698f), XMFLOAT2(0.4014112f, 0.4041196f)},
    { XMFLOAT2(0.8212134f, -0.09008056f), XMFLOAT2(0.4557378f, 0.06421411f), XMFLOAT2(0.5579293f, 0.02285126f), XMFLOAT2(0.5442622f, 0.0642142f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.2903762f, 0.8061862f), XMFLOAT2(0.0f, 0.0f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.7146914f, 0.4600788f), XMFLOAT2(0.2853086f, 0.4600787f), XMFLOAT2(0.2903761f, 0.1938137f), XMFLOAT2(0.7096237f, 0.1938138f)},
    { XMFLOAT2(0.8212134f, -0.09008056f), XMFLOAT2(0.4557378f, 0.06421411f), XMFLOAT2(0.5579293f, 0.02285126f), XMFLOAT2(0.5442622f, 0.0642142f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.6482264f, 0.6767768f), XMFLOAT2(0.3517736f, 0.6767768f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.7146914f, 0.4600788f), XMFLOAT2(0.2853086f, 0.4600787f), XMFLOAT2(0.5f, 0.1464467f), XMFLOAT2(0.7096237f, 0.1938138f)},
    { XMFLOAT2(0.5687921f, 0.4179577f), XMFLOAT2(0.4557378f, 0.06421411f), XMFLOAT2(0.5579293f, 0.02285126f), XMFLOAT2(0.4312079f, 0.4179577f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.6482264f, 0.6767768f), XMFLOAT2(0.3517736f, 0.6767768f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.6640847f), XMFLOAT2(0.2853086f, 0.4600787f), XMFLOAT2(0.5f, 0.1464467f), XMFLOAT2(0.7096237f, 0.1938138f)},
    { XMFLOAT2(0.6572179f, 0.1752405f), XMFLOAT2(0.5f, -0.01961529f), XMFLOAT2(0.5579293f, 0.02285126f), XMFLOAT2(0.4312079f, 0.4179577f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.5f, 1.019615f), XMFLOAT2(0.3427821f, 0.8247595f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.6640847f), XMFLOAT2(0.7515485f, 0.5f), XMFLOAT2(0.2484514f, 0.5f), XMFLOAT2(0.7096237f, 0.1938138f)},
    { XMFLOAT2(0.6572179f, 0.1752405f), XMFLOAT2(0.2655363f, 0.07633501f), XMFLOAT2(0.5579293f, 0.02285126f), XMFLOAT2(0.7301055f, -0.05517435f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.3938601f, 0.8840468f), XMFLOAT2(0.4589318f, 0.5371945f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.8535773f, 0.5265464f), XMFLOAT2(0.4919947f, 1.143263f), XMFLOAT2(0.2913441f, 0.4010564f), XMFLOAT2(0.7096237f, 0.1938138f)},
    { XMFLOAT2(0.6572179f, 0.1752405f), XMFLOAT2(0.6482264f, 0.0669874f), XMFLOAT2(0.3517737f, 0.0669874f), XMFLOAT2(0.7301055f, -0.05517435f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.6482264f, 0.9330126f), XMFLOAT2(0.3517737f, 0.9330126f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.8535773f, 0.5265464f), XMFLOAT2(0.4919947f, 1.143263f), XMFLOAT2(0.2913441f, 0.4010564f), XMFLOAT2(0.7096237f, 0.1938138f)},
    { XMFLOAT2(0.6276523f, 0.1449911f), XMFLOAT2(0.7819847f, 0.2265573f), XMFLOAT2(0.2180153f, 0.2265573f), XMFLOAT2(0.3723477f, 0.1449911f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.6537464f, 1.158245f), XMFLOAT2(0.3462536f, 1.158245f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.4073713f), XMFLOAT2(0.4919947f, 1.143263f), XMFLOAT2(0.2913441f, 0.4010564f), XMFLOAT2(0.7096237f, 0.1938138f)},
    { XMFLOAT2(0.6252022f, 0.03071156f), XMFLOAT2(0.7819847f, 0.2265573f), XMFLOAT2(0.1936063f, -0.004412651f), XMFLOAT2(0.3723477f, 0.1449911f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.5609665f, 1.002164f), XMFLOAT2(0.3064758f, 0.8568107f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.4073713f), XMFLOAT2(0.7505748f, 0.510723f), XMFLOAT2(0.2913441f, 0.4010564f), XMFLOAT2(0.7096237f, 0.1938138f)},
    { XMFLOAT2(0.6252022f, 0.03071156f), XMFLOAT2(0.7819847f, 0.2265573f), XMFLOAT2(0.1534572f, 0.05669174f), XMFLOAT2(0.4710608f, -0.1094478f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.5289392f, 1.109448f), XMFLOAT2(0.3406388f, 0.7684373f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.6275455f, 0.2545433f), XMFLOAT2(0.8392965f, 0.8725298f), XMFLOAT2(0.2913441f, 0.4010564f), XMFLOAT2(0.7096237f, 0.1938138f)},
    { XMFLOAT2(0.6252022f, 0.03071156f), XMFLOAT2(0.7819847f, 0.2265573f), XMFLOAT2(0.5000001f, -0.01961529f), XMFLOAT2(0.3427822f, 0.1752405f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.6572179f, 0.8247595f), XMFLOAT2(0.5000001f, 1.019615f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.6275455f, 0.2545433f), XMFLOAT2(0.8392965f, 0.8725298f), XMFLOAT2(0.7515486f, 0.5f), XMFLOAT2(0.2484515f, 0.5f)},
    { XMFLOAT2(0.2698945f, -0.05517447f), XMFLOAT2(0.7819847f, 0.2265573f), XMFLOAT2(0.7344637f, 0.0763348f), XMFLOAT2(0.3427822f, 0.1752405f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.5410682f, 0.5371944f), XMFLOAT2(0.6061399f, 0.8840466f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.1464228f, 0.5265462f), XMFLOAT2(0.8392965f, 0.8725298f), XMFLOAT2(0.7086558f, 0.4010563f), XMFLOAT2(0.5080053f, 1.143263f)},
    { XMFLOAT2(0.6243042f, 0.05526024f), XMFLOAT2(0.7409796f, 0.2126049f), XMFLOAT2(0.2590206f, 0.212605f), XMFLOAT2(0.375696f, 0.05526024f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.6243041f, 0.9447398f), XMFLOAT2(0.3756959f, 0.9447398f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.1464228f, 0.5265462f), XMFLOAT2(0.7486082f, 0.5000001f), XMFLOAT2(0.5f, 1.07479f), XMFLOAT2(0.2513919f, 0.5f)},
    { XMFLOAT2(0.6243042f, 0.05526024f), XMFLOAT2(0.2673886f, -0.0257374f), XMFLOAT2(0.7326114f, -0.02573735f), XMFLOAT2(0.375696f, 0.05526024f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.4028216f, 0.5413677f), XMFLOAT2(0.5971784f, 0.5413677f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 1.645048f), XMFLOAT2(0.1773253f, 0.6479837f), XMFLOAT2(0.5f, 0.1720725f), XMFLOAT2(0.8226747f, 0.6479837f)},
    { XMFLOAT2(0.6243042f, 0.05526024f), XMFLOAT2(0.8063938f, -0.004412711f), XMFLOAT2(0.7326114f, -0.02573735f), XMFLOAT2(0.3747978f, 0.03071162f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.6935242f, 0.8568107f), XMFLOAT2(0.4390335f, 1.002164f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 1.645048f), XMFLOAT2(0.1773253f, 0.6479837f), XMFLOAT2(0.5f, 0.1720725f), XMFLOAT2(0.2494252f, 0.510723f)},
    { XMFLOAT2(0.4710608f, -0.1094476f), XMFLOAT2(0.7977884f, -0.001612484f), XMFLOAT2(0.7326114f, -0.02573735f), XMFLOAT2(0.3747978f, 0.03071162f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.6482031f, 0.689586f), XMFLOAT2(0.5289392f, 1.109448f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.3184258f, 0.300641f), XMFLOAT2(0.1773253f, 0.6479837f), XMFLOAT2(0.5f, 0.1720725f), XMFLOAT2(0.201761f, 1.07395f)},
    { XMFLOAT2(0.6482265f, -0.03033018f), XMFLOAT2(0.7977884f, -0.001612484f), XMFLOAT2(0.7326114f, -0.02573735f), XMFLOAT2(0.3517736f, -0.03033012f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.6482264f, 1.03033f), XMFLOAT2(0.3517736f, 1.03033f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.3184258f, 0.300641f), XMFLOAT2(0.7964529f, 0.4999999f), XMFLOAT2(0.5f, 0.1720725f), XMFLOAT2(0.2035472f, 0.4999999f)},
    { XMFLOAT2(0.6482265f, -0.03033018f), XMFLOAT2(0.7977884f, -0.001612484f), XMFLOAT2(0.7326114f, -0.02573735f), XMFLOAT2(0.3517736f, -0.03033012f), XMFLOAT2(0.6445343f, 0.890963f), XMFLOAT2(0.6445344f, 0.8909631f), XMFLOAT2(0.3554656f, 0.8909631f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.03248978f), XMFLOAT2(0.8526661f, 0.3755452f), XMFLOAT2(0.5f, 0.1720725f), XMFLOAT2(0.1473339f, 0.375545f)},
    { XMFLOAT2(0.6482265f, -0.03033018f), XMFLOAT2(0.7977884f, -0.001612484f), XMFLOAT2(0.7326114f, -0.02573735f), XMFLOAT2(0.3517736f, -0.03033012f), XMFLOAT2(0.2484514f, 0.5000001f), XMFLOAT2(0.5f, 1.019615f), XMFLOAT2(0.7515485f, 0.5000001f), XMFLOAT2(0.5f, -0.01961517f), XMFLOAT2(0.3427822f, 0.1752405f), XMFLOAT2(0.8526661f, 0.3755452f), XMFLOAT2(0.6572179f, 0.8247597f), XMFLOAT2(0.1473339f, 0.375545f)},
    { XMFLOAT2(0.3462536f, -0.1582449f), XMFLOAT2(0.7977884f, -0.001612484f), XMFLOAT2(0.7326114f, -0.02573735f), XMFLOAT2(0.6537464f, -0.1582449f), XMFLOAT2(0.2180153f, 0.7734429f), XMFLOAT2(0.3723477f, 0.855009f), XMFLOAT2(0.6276523f, 0.855009f), XMFLOAT2(0.7819847f, 0.7734429f), XMFLOAT2(0.3427822f, 0.1752405f), XMFLOAT2(0.8526661f, 0.3755452f), XMFLOAT2(0.5f, 0.5926287f), XMFLOAT2(0.1473339f, 0.375545f)},
    { XMFLOAT2(0.6243041f, 0.05526027f), XMFLOAT2(0.3756959f, 0.05526024f), XMFLOAT2(0.7326114f, -0.02573735f), XMFLOAT2(0.6537464f, -0.1582449f), XMFLOAT2(0.7409793f, 0.7873951f), XMFLOAT2(0.2590205f, 0.7873952f), XMFLOAT2(0.3756958f, 0.9447398f), XMFLOAT2(0.624304f, 0.9447398f), XMFLOAT2(0.7486081f, 0.5000001f), XMFLOAT2(0.4999999f, -0.07479012f), XMFLOAT2(0.2513918f, 0.5f), XMFLOAT2(0.1473339f, 0.375545f)},
    { XMFLOAT2(0.6243041f, 0.05526027f), XMFLOAT2(0.3393024f, -0.09664327f), XMFLOAT2(0.7326114f, -0.02573735f), XMFLOAT2(0.9144747f, -0.2603388f), XMFLOAT2(0.4641576f, 1.208375f), XMFLOAT2(0.3812997f, 0.7177515f), XMFLOAT2(0.5795027f, 0.6226251f), XMFLOAT2(0.7678295f, 0.9001139f), XMFLOAT2(0.7486081f, 0.5000001f), XMFLOAT2(0.1552388f, 0.4898281f), XMFLOAT2(0.4504452f, 0.3224365f), XMFLOAT2(0.1473339f, 0.375545f)},
    { XMFLOAT2(0.6243041f, 0.05526027f), XMFLOAT2(0.6537464f, -0.158245f), XMFLOAT2(0.3462536f, -0.158245f), XMFLOAT2(0.9144747f, -0.2603388f), XMFLOAT2(0.6276523f, 0.8550089f), XMFLOAT2(0.7819847f, 0.7734428f), XMFLOAT2(0.2180153f, 0.7734427f), XMFLOAT2(0.3723477f, 0.8550089f), XMFLOAT2(0.5f, 0.5926287f), XMFLOAT2(0.1552388f, 0.4898281f), XMFLOAT2(0.4504452f, 0.3224365f), XMFLOAT2(0.1473339f, 0.375545f)},
    { XMFLOAT2(0.5926638f, 0.2711191f), XMFLOAT2(0.6537464f, -0.158245f), XMFLOAT2(0.3462536f, -0.158245f), XMFLOAT2(0.4073363f, 0.2711191f), XMFLOAT2(0.6276523f, 0.8550089f), XMFLOAT2(0.7819847f, 0.7734428f), XMFLOAT2(0.2180153f, 0.7734427f), XMFLOAT2(0.3723477f, 0.8550089f), XMFLOAT2(0.5f, 0.5926287f), XMFLOAT2(0.1552388f, 0.4898281f), XMFLOAT2(0.4504452f, 0.3224365f), XMFLOAT2(0.1473339f, 0.375545f)},
    { XMFLOAT2(0.6606977f, -0.09664333f), XMFLOAT2(0.6537464f, -0.158245f), XMFLOAT2(0.08552545f, -0.2603388f), XMFLOAT2(0.4073363f, 0.2711191f), XMFLOAT2(0.6187004f, 0.7177514f), XMFLOAT2(0.5358425f, 1.208375f), XMFLOAT2(0.2321706f, 0.9001138f), XMFLOAT2(0.4204973f, 0.6226251f), XMFLOAT2(0.5495548f, 0.3224365f), XMFLOAT2(0.8447613f, 0.4898281f), XMFLOAT2(0.4504452f, 0.3224365f), XMFLOAT2(0.1473339f, 0.375545f)},
    { XMFLOAT2(0.6606977f, -0.09664333f), XMFLOAT2(0.6537464f, -0.158245f), XMFLOAT2(0.2487561f, -0.3930671f), XMFLOAT2(0.7512437f, -0.3930669f), XMFLOAT2(0.6282304f, 0.8579201f), XMFLOAT2(0.3717697f, 0.8579201f), XMFLOAT2(0.3997989f, 0.411538f), XMFLOAT2(0.6002011f, 0.411538f), XMFLOAT2(0.5495548f, 0.3224365f), XMFLOAT2(0.5000001f, 1.387949f), XMFLOAT2(0.4504452f, 0.3224365f), XMFLOAT2(0.1473339f, 0.375545f)},
    { XMFLOAT2(0.6606977f, -0.09664333f), XMFLOAT2(0.6537464f, -0.158245f), XMFLOAT2(0.6243041f, 0.05526024f), XMFLOAT2(0.3756959f, 0.05526024f), XMFLOAT2(0.375696f, 0.9447399f), XMFLOAT2(0.6243041f, 0.9447399f), XMFLOAT2(0.7409794f, 0.7873953f), XMFLOAT2(0.2590206f, 0.7873952f), XMFLOAT2(0.2513919f, 0.5000001f), XMFLOAT2(0.5000001f, 1.387949f), XMFLOAT2(0.7486081f, 0.5000001f), XMFLOAT2(0.5f, -0.07479012f)},
    { XMFLOAT2(0.08552533f, -0.2603388f), XMFLOAT2(0.6537464f, -0.158245f), XMFLOAT2(0.6606976f, -0.09664333f), XMFLOAT2(0.3756959f, 0.05526024f), XMFLOAT2(0.2321705f, 0.9001138f), XMFLOAT2(0.4204973f, 0.6226251f), XMFLOAT2(0.6187003f, 0.7177514f), XMFLOAT2(0.5358424f, 1.208375f), XMFLOAT2(0.2513919f, 0.5000001f), XMFLOAT2(0.5000001f, 1.387949f), XMFLOAT2(0.5495548f, 0.3224365f), XMFLOAT2(0.8447613f, 0.4898281f)},
    { XMFLOAT2(0.08552533f, -0.2603388f), XMFLOAT2(0.3989658f, -0.02652216f), XMFLOAT2(0.6606976f, -0.09664333f), XMFLOAT2(0.5731646f, -0.6775603f), XMFLOAT2(0.2321705f, 0.9001138f), XMFLOAT2(0.4204973f, 0.6226251f), XMFLOAT2(0.6187003f, 0.7177514f), XMFLOAT2(0.5358424f, 1.208375f), XMFLOAT2(-0.05742663f, 0.7891992f), XMFLOAT2(0.2349562f, 0.3549654f), XMFLOAT2(0.5495548f, 0.3224365f), XMFLOAT2(0.8447613f, 0.4898281f)},
    { XMFLOAT2(0.08552533f, -0.2603388f), XMFLOAT2(0.3164492f, -0.1567149f), XMFLOAT2(0.6835507f, -0.1567149f), XMFLOAT2(0.5731646f, -0.6775603f), XMFLOAT2(0.3164492f, 1.156715f), XMFLOAT2(0.3929696f, 0.6276457f), XMFLOAT2(0.6070303f, 0.6276457f), XMFLOAT2(0.6835507f, 1.156715f), XMFLOAT2(-0.05742663f, 0.7891992f), XMFLOAT2(0.1328985f, 0.4999999f), XMFLOAT2(0.4999999f, 0.2447083f), XMFLOAT2(0.8671014f, 0.5f)},
    { XMFLOAT2(0.08552533f, -0.2603388f), XMFLOAT2(0.9144745f, -0.2603387f), XMFLOAT2(0.6835507f, -0.1567149f), XMFLOAT2(0.3393023f, -0.09664327f), XMFLOAT2(0.5795027f, 0.6226251f), XMFLOAT2(0.7678294f, 0.9001138f), XMFLOAT2(0.4641575f, 1.208375f), XMFLOAT2(0.3812996f, 0.7177514f), XMFLOAT2(0.4504452f, 0.3224365f), XMFLOAT2(0.1328985f, 0.4999999f), XMFLOAT2(0.4999999f, 0.2447083f), XMFLOAT2(0.1552387f, 0.4898281f)},
    { XMFLOAT2(0.2487562f, -0.3930672f), XMFLOAT2(0.7512439f, -0.3930673f), XMFLOAT2(0.6835507f, -0.1567149f), XMFLOAT2(0.3393023f, -0.09664327f), XMFLOAT2(0.3997989f, 0.411538f), XMFLOAT2(0.6002011f, 0.4115379f), XMFLOAT2(0.6282303f, 0.8579201f), XMFLOAT2(0.3717697f, 0.8579201f), XMFLOAT2(0.4504452f, 0.3224365f), XMFLOAT2(0.1328985f, 0.4999999f), XMFLOAT2(0.4999999f, 0.2447083f), XMFLOAT2(0.5f, 1.387949f)},
    { XMFLOAT2(0.6835508f, -0.1567149f), XMFLOAT2(0.7512439f, -0.3930673f), XMFLOAT2(0.6835507f, -0.1567149f), XMFLOAT2(0.3164493f, -0.1567149f), XMFLOAT2(0.6070305f, 0.6276457f), XMFLOAT2(0.6835508f, 1.156715f), XMFLOAT2(0.3164492f, 1.156715f), XMFLOAT2(0.3929697f, 0.6276457f), XMFLOAT2(0.5000001f, 0.2447084f), XMFLOAT2(0.8671016f, 0.5f), XMFLOAT2(0.4999999f, 0.2447083f), XMFLOAT2(0.1328985f, 0.4999999f)},
    { XMFLOAT2(0.6835508f, -0.1567149f), XMFLOAT2(0.7512439f, -0.3930673f), XMFLOAT2(0.6835507f, -0.1567149f), XMFLOAT2(0.3164493f, -0.1567149f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.6796775f, 0.4999999f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.5000001f, 0.2447084f), XMFLOAT2(0.1855643f, -0.1495192f), XMFLOAT2(0.4999999f, 0.2447083f), XMFLOAT2(0.8144356f, 1.149519f)},
    { XMFLOAT2(0.6835508f, -0.1567149f), XMFLOAT2(0.7512439f, -0.3930673f), XMFLOAT2(0.6835507f, -0.1567149f), XMFLOAT2(0.3164493f, -0.1567149f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.5000001f, 0.2447084f), XMFLOAT2(0.7096238f, 0.1938139f), XMFLOAT2(0.2903762f, 0.1938139f), XMFLOAT2(0.8144356f, 1.149519f)},
    { XMFLOAT2(0.6061399f, 0.1159535f), XMFLOAT2(0.7512439f, -0.3930673f), XMFLOAT2(0.6835507f, -0.1567149f), XMFLOAT2(0.5410681f, 0.4628057f), XMFLOAT2(0.7344636f, 0.9236652f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.2698943f, 1.055175f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.7086558f, 0.5989438f), XMFLOAT2(0.5080053f, -0.1432632f), XMFLOAT2(0.1464226f, 0.4734538f), XMFLOAT2(0.8144356f, 1.149519f)},
    { XMFLOAT2(0.6935242f, 0.1431893f), XMFLOAT2(0.4390335f, -0.002164066f), XMFLOAT2(0.6835507f, -0.1567149f), XMFLOAT2(0.5410681f, 0.4628057f), XMFLOAT2(0.8063937f, 1.004413f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.3747978f, 0.9692883f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.7086558f, 0.5989438f), XMFLOAT2(0.5080053f, -0.1432632f), XMFLOAT2(0.2494252f, 0.489277f), XMFLOAT2(0.8144356f, 1.149519f)},
    { XMFLOAT2(0.6935242f, 0.1431893f), XMFLOAT2(0.2525882f, -0.1691477f), XMFLOAT2(0.6835507f, -0.1567149f), XMFLOAT2(0.6137747f, 0.1461809f), XMFLOAT2(0.7126039f, 1.16116f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.3941914f, 0.7861691f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.7964527f, 0.5f), XMFLOAT2(0.5080053f, -0.1432632f), XMFLOAT2(0.2035471f, 0.5f), XMFLOAT2(0.8144356f, 1.149519f)},
    { XMFLOAT2(0.6935242f, 0.1431893f), XMFLOAT2(0.5609665f, -0.002164125f), XMFLOAT2(0.3064758f, 0.1431893f), XMFLOAT2(0.6137747f, 0.1461809f), XMFLOAT2(0.6252022f, 0.9692884f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.1936063f, 1.004413f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.7964527f, 0.5f), XMFLOAT2(0.7505748f, 0.489277f), XMFLOAT2(0.2035471f, 0.5f), XMFLOAT2(0.8144356f, 1.149519f)},
    { XMFLOAT2(0.6187003f, 0.2822486f), XMFLOAT2(0.5358424f, -0.2083753f), XMFLOAT2(0.2321706f, 0.09988627f), XMFLOAT2(0.4204973f, 0.3773749f), XMFLOAT2(0.6606977f, 1.096643f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.0855256f, 1.260338f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.5495548f, 0.6775635f), XMFLOAT2(0.8447612f, 0.5101718f), XMFLOAT2(0.2035471f, 0.5f), XMFLOAT2(0.8144356f, 1.149519f)},
    { XMFLOAT2(0.7096238f, 0.06698731f), XMFLOAT2(0.5358424f, -0.2083753f), XMFLOAT2(0.2903762f, 0.06698731f), XMFLOAT2(0.4204973f, 0.3773749f), XMFLOAT2(0.7096238f, 0.9330127f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.2903762f, 0.9330127f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.5495548f, 0.6775635f), XMFLOAT2(0.8447612f, 0.5101718f), XMFLOAT2(0.2035471f, 0.5f), XMFLOAT2(0.8144356f, 1.149519f)},
    { XMFLOAT2(0.7096238f, 0.06698731f), XMFLOAT2(0.5358424f, -0.2083753f), XMFLOAT2(0.2330837f, 0.007872403f), XMFLOAT2(0.5579295f, 0.02285135f), XMFLOAT2(0.672684f, 1.147261f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.3230098f, 0.7913771f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.7380924f, 0.4898112f), XMFLOAT2(0.8447612f, 0.5101718f), XMFLOAT2(0.2035471f, 0.5f), XMFLOAT2(0.8144356f, 1.149519f)},
    { XMFLOAT2(0.7096238f, 0.06698731f), XMFLOAT2(0.5358424f, -0.2083753f), XMFLOAT2(0.3938601f, 0.1159534f), XMFLOAT2(0.4589318f, 0.4628057f), XMFLOAT2(0.7301056f, 1.055174f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.2655363f, 0.9236652f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.7380924f, 0.4898112f), XMFLOAT2(0.8535774f, 0.4734538f), XMFLOAT2(0.4919946f, -0.1432633f), XMFLOAT2(0.2913442f, 0.5989438f)},
    { XMFLOAT2(0.6386859f, 0.4166027f), XMFLOAT2(0.5358424f, -0.2083753f), XMFLOAT2(0.3938601f, 0.1159534f), XMFLOAT2(0.4589318f, 0.4628057f), XMFLOAT2(0.7301056f, 1.055174f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.2655363f, 0.9236652f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.5642688f, 0.7672089f), XMFLOAT2(0.8535774f, 0.4734538f), XMFLOAT2(0.4919946f, -0.1432633f), XMFLOAT2(0.2913442f, 0.5989438f)},
    { XMFLOAT2(0.7678294f, 0.09988618f), XMFLOAT2(0.4641575f, -0.2083755f), XMFLOAT2(0.3812996f, 0.2822486f), XMFLOAT2(0.5795027f, 0.3773749f), XMFLOAT2(0.9144745f, 1.260339f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.3393023f, 1.096643f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.5642688f, 0.7672089f), XMFLOAT2(0.8535774f, 0.4734538f), XMFLOAT2(0.1552387f, 0.5101718f), XMFLOAT2(0.4504452f, 0.6775635f)},
    { XMFLOAT2(0.7678294f, 0.09988618f), XMFLOAT2(0.1787867f, -0.0900805f), XMFLOAT2(0.4557379f, 0.06421423f), XMFLOAT2(0.5795027f, 0.3773749f), XMFLOAT2(0.6561024f, 1.481294f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.465413f, 0.7134539f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.9900272f, 0.7056699f), XMFLOAT2(0.8535774f, 0.4734538f), XMFLOAT2(0.2853087f, 0.4600787f), XMFLOAT2(0.5985889f, 0.4041196f)},
    { XMFLOAT2(0.7678294f, 0.09988618f), XMFLOAT2(0.712604f, -0.1611603f), XMFLOAT2(0.4557379f, 0.06421423f), XMFLOAT2(0.3941914f, 0.2138309f), XMFLOAT2(0.6137748f, 0.8538191f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.2525882f, 1.169148f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.9900272f, 0.7056699f), XMFLOAT2(0.7964528f, 0.4999999f), XMFLOAT2(0.2853087f, 0.4600787f), XMFLOAT2(0.2035472f, 0.4999999f)},
    { XMFLOAT2(0.5442622f, 0.06421414f), XMFLOAT2(0.8212134f, -0.0900808f), XMFLOAT2(0.4557379f, 0.06421423f), XMFLOAT2(0.3941914f, 0.2138309f), XMFLOAT2(0.5345871f, 0.7134539f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.3438975f, 1.481294f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.4014112f, 0.4041195f), XMFLOAT2(0.7146915f, 0.4600787f), XMFLOAT2(0.2853087f, 0.4600787f), XMFLOAT2(0.009972721f, 0.7056698f)},
    { XMFLOAT2(0.7669163f, 0.007872432f), XMFLOAT2(0.8212134f, -0.0900808f), XMFLOAT2(0.4557379f, 0.06421423f), XMFLOAT2(0.4420706f, 0.02285132f), XMFLOAT2(0.6769902f, 0.7913771f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.3273161f, 1.147261f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.4014112f, 0.4041195f), XMFLOAT2(0.7146915f, 0.4600787f), XMFLOAT2(0.2853087f, 0.4600787f), XMFLOAT2(0.2619076f, 0.4898112f)},
    { XMFLOAT2(0.7669163f, 0.007872432f), XMFLOAT2(0.8212134f, -0.0900808f), XMFLOAT2(0.4557379f, 0.06421423f), XMFLOAT2(0.4420706f, 0.02285132f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.7096238f, 0.1938137f), XMFLOAT2(0.7146915f, 0.4600787f), XMFLOAT2(0.2853087f, 0.4600787f), XMFLOAT2(0.2903762f, 0.1938137f)},
    { XMFLOAT2(0.7669163f, 0.007872432f), XMFLOAT2(0.8212134f, -0.0900808f), XMFLOAT2(0.4557379f, 0.06421423f), XMFLOAT2(0.4420706f, 0.02285132f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.3478881f, 0.9114598f), XMFLOAT2(0.6521119f, 0.9114599f), XMFLOAT2(0.7556959f, 0.4097655f), XMFLOAT2(0.5f, -0.309323f), XMFLOAT2(0.244304f, 0.4097655f), XMFLOAT2(0.2903762f, 0.1938137f)},
    { XMFLOAT2(0.4710608f, -0.1094477f), XMFLOAT2(0.8212134f, -0.0900808f), XMFLOAT2(0.4557379f, 0.06421423f), XMFLOAT2(0.6593612f, 0.2315626f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.5289391f, 1.109448f), XMFLOAT2(0.8465427f, 0.9433081f), XMFLOAT2(0.7556959f, 0.4097655f), XMFLOAT2(0.1607034f, 0.12747f), XMFLOAT2(0.3724545f, 0.7454567f), XMFLOAT2(0.2903762f, 0.1938137f)},
    { XMFLOAT2(0.6482264f, -0.03033f), XMFLOAT2(0.3517736f, -0.03033006f), XMFLOAT2(0.4557379f, 0.06421423f), XMFLOAT2(0.6593612f, 0.2315626f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.3517735f, 1.03033f), XMFLOAT2(0.6482264f, 1.03033f), XMFLOAT2(0.7964528f, 0.5000001f), XMFLOAT2(0.1607034f, 0.12747f), XMFLOAT2(0.2035471f, 0.5f), XMFLOAT2(0.2903762f, 0.1938137f)},
    { XMFLOAT2(0.6482264f, -0.03033f), XMFLOAT2(0.327316f, -0.1472614f), XMFLOAT2(0.4557379f, 0.06421423f), XMFLOAT2(0.6769902f, 0.208623f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.4420705f, 0.9771487f), XMFLOAT2(0.7669163f, 0.9921276f), XMFLOAT2(0.7964528f, 0.5000001f), XMFLOAT2(0.1607034f, 0.12747f), XMFLOAT2(0.2619076f, 0.5101888f), XMFLOAT2(0.2903762f, 0.1938137f)},
    { XMFLOAT2(0.6482264f, -0.03033f), XMFLOAT2(0.5289392f, -0.1094475f), XMFLOAT2(0.3406388f, 0.2315627f), XMFLOAT2(0.6769902f, 0.208623f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.1534573f, 0.9433081f), XMFLOAT2(0.4710608f, 1.109448f), XMFLOAT2(0.6275455f, 0.7454567f), XMFLOAT2(0.8392965f, 0.1274701f), XMFLOAT2(0.2619076f, 0.5101888f), XMFLOAT2(0.2903762f, 0.1938137f)},
    { XMFLOAT2(0.6282303f, 0.1420799f), XMFLOAT2(0.3717696f, 0.1420799f), XMFLOAT2(0.399799f, 0.5884619f), XMFLOAT2(0.6002011f, 0.5884619f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.2487562f, 1.393067f), XMFLOAT2(0.7512438f, 1.393067f), XMFLOAT2(0.6275455f, 0.7454567f), XMFLOAT2(0.4999999f, -0.3879488f), XMFLOAT2(0.2619076f, 0.5101888f), XMFLOAT2(0.2903762f, 0.1938137f)},
    { XMFLOAT2(0.6726839f, -0.1472614f), XMFLOAT2(0.3717696f, 0.1420799f), XMFLOAT2(0.3230098f, 0.2086229f), XMFLOAT2(0.6002011f, 0.5884619f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.2330837f, 0.9921275f), XMFLOAT2(0.5579294f, 0.9771487f), XMFLOAT2(0.7380924f, 0.5101888f), XMFLOAT2(0.4999999f, -0.3879488f), XMFLOAT2(0.2619076f, 0.5101888f), XMFLOAT2(0.2903762f, 0.1938137f)},
    { XMFLOAT2(0.6726839f, -0.1472614f), XMFLOAT2(0.3717696f, 0.1420799f), XMFLOAT2(0.3517735f, 0.06698731f), XMFLOAT2(0.6482264f, 0.06698737f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.3517735f, 0.9330127f), XMFLOAT2(0.6482264f, 0.9330126f), XMFLOAT2(0.7380924f, 0.5101888f), XMFLOAT2(0.4999999f, -0.3879488f), XMFLOAT2(0.2619076f, 0.5101888f), XMFLOAT2(0.2903762f, 0.1938137f)},
    { XMFLOAT2(0.6726839f, -0.1472614f), XMFLOAT2(0.3717696f, 0.1420799f), XMFLOAT2(0.4028216f, 0.4586324f), XMFLOAT2(0.5971785f, 0.4586324f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.2673886f, 1.025738f), XMFLOAT2(0.7326114f, 1.025738f), XMFLOAT2(0.8226747f, 0.3520164f), XMFLOAT2(0.5f, -0.6450477f), XMFLOAT2(0.1773252f, 0.3520164f), XMFLOAT2(0.5f, 0.8279276f)},
    { XMFLOAT2(0.3438976f, -0.4812936f), XMFLOAT2(0.3717696f, 0.1420799f), XMFLOAT2(0.5345871f, 0.2865461f), XMFLOAT2(0.5971785f, 0.4586324f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.5442621f, 0.9357858f), XMFLOAT2(0.8212134f, 1.090081f), XMFLOAT2(0.8226747f, 0.3520164f), XMFLOAT2(0.009972751f, 0.2943302f), XMFLOAT2(0.4014111f, 0.5958805f), XMFLOAT2(0.7146914f, 0.5399213f)},
    { XMFLOAT2(0.6835507f, -0.1567146f), XMFLOAT2(0.3164492f, -0.1567148f), XMFLOAT2(0.3929695f, 0.3723543f), XMFLOAT2(0.6070303f, 0.3723543f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.3164492f, 1.156715f), XMFLOAT2(0.6835507f, 1.156715f), XMFLOAT2(0.8671014f, 0.5000001f), XMFLOAT2(0.009972751f, 0.2943302f), XMFLOAT2(0.1328984f, 0.5000001f), XMFLOAT2(0.4999999f, 0.7552916f)},
    { XMFLOAT2(0.6835507f, -0.1567146f), XMFLOAT2(0.1855642f, -0.149519f), XMFLOAT2(0.4999999f, 0.1288463f), XMFLOAT2(0.6070303f, 0.3723543f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.4999999f, 0.8711537f), XMFLOAT2(0.8144356f, 1.149519f), XMFLOAT2(0.8671014f, 0.5000001f), XMFLOAT2(0.009972751f, 0.2943302f), XMFLOAT2(0.3203224f, 0.5f), XMFLOAT2(0.6796775f, 0.5f)},
    { XMFLOAT2(0.6835507f, -0.1567146f), XMFLOAT2(0.6561024f, -0.4812939f), XMFLOAT2(0.4999999f, 0.1288463f), XMFLOAT2(0.4654129f, 0.286546f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.1787866f, 1.090081f), XMFLOAT2(0.4557378f, 0.9357858f), XMFLOAT2(0.5985888f, 0.5958804f), XMFLOAT2(0.9900272f, 0.2943302f), XMFLOAT2(0.3203224f, 0.5f), XMFLOAT2(0.2853086f, 0.5399212f)},
    { XMFLOAT2(0.6817859f, 0.1660526f), XMFLOAT2(0.6561024f, -0.4812939f), XMFLOAT2(0.4999999f, 0.1288463f), XMFLOAT2(0.4654129f, 0.286546f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.1787866f, 1.090081f), XMFLOAT2(0.4557378f, 0.9357858f), XMFLOAT2(0.5985888f, 0.5958804f), XMFLOAT2(0.9900272f, 0.2943302f), XMFLOAT2(0.3203224f, 0.5f), XMFLOAT2(0.2853086f, 0.5399212f)},
    { XMFLOAT2(0.8144357f, -0.1495191f), XMFLOAT2(0.6561024f, -0.4812939f), XMFLOAT2(0.4999999f, 0.1288463f), XMFLOAT2(0.5f, 0.1288463f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.1855643f, 1.149519f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.6796775f, 0.5f), XMFLOAT2(0.9900272f, 0.2943302f), XMFLOAT2(0.3203224f, 0.5f), XMFLOAT2(0.3203225f, 0.5f)},
    { XMFLOAT2(0.8144357f, -0.1495191f), XMFLOAT2(0.6561024f, -0.4812939f), XMFLOAT2(0.4999999f, 0.1288463f), XMFLOAT2(0.5f, 0.1288463f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.3517736f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6796775f, 0.5f), XMFLOAT2(0.9900272f, 0.2943302f), XMFLOAT2(0.3203224f, 0.5f), XMFLOAT2(0.5f, 0.1464466f)},
    { XMFLOAT2(0.8144357f, -0.1495191f), XMFLOAT2(0.6561024f, -0.4812939f), XMFLOAT2(0.4999999f, 0.1288463f), XMFLOAT2(0.5f, 0.1288463f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.6482264f, 0.6767768f), XMFLOAT2(0.3517736f, 0.6767768f), XMFLOAT2(0.6796775f, 0.5f), XMFLOAT2(0.9900272f, 0.2943302f), XMFLOAT2(0.3203224f, 0.5f), XMFLOAT2(0.5f, 0.1464467f)},
    { XMFLOAT2(0.3427821f, 0.1752405f), XMFLOAT2(0.6561024f, -0.4812939f), XMFLOAT2(0.4999999f, 0.1288463f), XMFLOAT2(0.5f, -0.01961523f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.6572179f, 0.8247595f), XMFLOAT2(0.5f, 1.019615f), XMFLOAT2(0.2484515f, 0.5f), XMFLOAT2(0.9900272f, 0.2943302f), XMFLOAT2(0.3203224f, 0.5f), XMFLOAT2(0.7515485f, 0.5f)},
    { XMFLOAT2(0.3427821f, 0.1752405f), XMFLOAT2(0.5f, 0.2638112f), XMFLOAT2(0.4999999f, 0.1288463f), XMFLOAT2(0.5f, -0.01961523f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.6572179f, 0.8247595f), XMFLOAT2(0.5f, 1.019615f), XMFLOAT2(0.2484515f, 0.5f), XMFLOAT2(0.3856598f, 0.5f), XMFLOAT2(0.3203224f, 0.5f), XMFLOAT2(0.7515485f, 0.5f)},
    { XMFLOAT2(0.3427821f, 0.1752405f), XMFLOAT2(0.2698945f, -0.05517429f), XMFLOAT2(0.4999999f, 0.1288463f), XMFLOAT2(0.7344636f, 0.07633498f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.5410682f, 0.5371945f), XMFLOAT2(0.6061399f, 0.8840468f), XMFLOAT2(0.5080053f, 1.143263f), XMFLOAT2(0.1464227f, 0.5265464f), XMFLOAT2(0.3203224f, 0.5f), XMFLOAT2(0.7086558f, 0.4010564f)},
    { XMFLOAT2(0.3427821f, 0.1752405f), XMFLOAT2(0.6572179f, 0.1752405f), XMFLOAT2(0.5000001f, -0.01961529f), XMFLOAT2(0.7344636f, 0.07633498f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.5000001f, 1.019615f), XMFLOAT2(0.3427822f, 0.8247595f), XMFLOAT2(0.5080053f, 1.143263f), XMFLOAT2(0.1464227f, 0.5265464f), XMFLOAT2(0.7515486f, 0.5f), XMFLOAT2(0.2484515f, 0.5f)},
    { XMFLOAT2(0.375696f, 0.05526009f), XMFLOAT2(0.6243041f, 0.05526009f), XMFLOAT2(0.7409794f, 0.2126048f), XMFLOAT2(0.2590206f, 0.2126049f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.6243041f, 0.9447399f), XMFLOAT2(0.3756959f, 0.9447398f), XMFLOAT2(0.2513919f, 0.5f), XMFLOAT2(0.1464227f, 0.5265464f), XMFLOAT2(0.7486082f, 0.4999999f), XMFLOAT2(0.5f, 1.07479f)},
    { XMFLOAT2(0.7301056f, -0.05517447f), XMFLOAT2(0.6243041f, 0.05526009f), XMFLOAT2(0.2655364f, 0.07633492f), XMFLOAT2(0.2590206f, 0.2126049f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.3938601f, 0.8840466f), XMFLOAT2(0.4589319f, 0.5371943f), XMFLOAT2(0.2513919f, 0.5f), XMFLOAT2(0.8535774f, 0.5265462f), XMFLOAT2(0.4919947f, 1.143263f), XMFLOAT2(0.2913442f, 0.4010563f)},
    { XMFLOAT2(0.7301056f, -0.05517447f), XMFLOAT2(0.6243041f, 0.05526009f), XMFLOAT2(0.2673886f, -0.02573746f), XMFLOAT2(0.7326114f, -0.0257374f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.4028216f, 0.5413677f), XMFLOAT2(0.5971785f, 0.5413677f), XMFLOAT2(0.8226747f, 0.6479836f), XMFLOAT2(0.5f, 1.645048f), XMFLOAT2(0.1773253f, 0.6479836f), XMFLOAT2(0.5f, 0.1720724f)},
    { XMFLOAT2(0.7301056f, -0.05517447f), XMFLOAT2(0.6243041f, 0.05526009f), XMFLOAT2(0.6482264f, 0.06698725f), XMFLOAT2(0.3517736f, 0.06698731f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.6482264f, 0.9330127f), XMFLOAT2(0.3517736f, 0.9330127f), XMFLOAT2(0.8226747f, 0.6479836f), XMFLOAT2(0.5f, 1.645048f), XMFLOAT2(0.1773253f, 0.6479836f), XMFLOAT2(0.5f, 0.1720724f)},
    { XMFLOAT2(0.3747978f, 0.03071156f), XMFLOAT2(0.6243041f, 0.05526009f), XMFLOAT2(0.8063937f, -0.004412711f), XMFLOAT2(0.3517736f, 0.06698731f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.6935242f, 0.8568107f), XMFLOAT2(0.4390335f, 1.002164f), XMFLOAT2(0.2494252f, 0.510723f), XMFLOAT2(0.5f, 1.645048f), XMFLOAT2(0.1773253f, 0.6479836f), XMFLOAT2(0.5f, 0.1720724f)},
    { XMFLOAT2(0.3723477f, 0.1449911f), XMFLOAT2(0.6276523f, 0.1449911f), XMFLOAT2(0.7819848f, 0.2265572f), XMFLOAT2(0.2180153f, 0.2265572f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.6537464f, 1.158245f), XMFLOAT2(0.3462536f, 1.158245f), XMFLOAT2(0.2494252f, 0.510723f), XMFLOAT2(0.5f, 0.4073713f), XMFLOAT2(0.1773253f, 0.6479836f), XMFLOAT2(0.5f, 0.1720724f)},
    { XMFLOAT2(0.3723477f, 0.1449911f), XMFLOAT2(0.4710608f, -0.1094478f), XMFLOAT2(0.7977885f, -0.001612663f), XMFLOAT2(0.2180153f, 0.2265572f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.6482031f, 0.6895859f), XMFLOAT2(0.5289392f, 1.109447f), XMFLOAT2(0.2017611f, 1.07395f), XMFLOAT2(0.3184258f, 0.3006409f), XMFLOAT2(0.1773253f, 0.6479836f), XMFLOAT2(0.5f, 0.1720724f)},
    { XMFLOAT2(0.3723477f, 0.1449911f), XMFLOAT2(0.6252023f, 0.03071147f), XMFLOAT2(0.7977885f, -0.001612663f), XMFLOAT2(0.1936064f, -0.004412711f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.5609666f, 1.002164f), XMFLOAT2(0.3064759f, 0.8568106f), XMFLOAT2(0.2017611f, 1.07395f), XMFLOAT2(0.3184258f, 0.3006409f), XMFLOAT2(0.7505748f, 0.5107229f), XMFLOAT2(0.5f, 0.1720724f)},
    { XMFLOAT2(0.3517736f, -0.03033012f), XMFLOAT2(0.6482264f, -0.03033018f), XMFLOAT2(0.7977885f, -0.001612663f), XMFLOAT2(0.1936064f, -0.004412711f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.6482264f, 1.03033f), XMFLOAT2(0.3517736f, 1.03033f), XMFLOAT2(0.2035472f, 0.4999999f), XMFLOAT2(0.3184258f, 0.3006409f), XMFLOAT2(0.7964528f, 0.4999999f), XMFLOAT2(0.5f, 0.1720724f)},
    { XMFLOAT2(0.5289392f, -0.1094477f), XMFLOAT2(0.6482264f, -0.03033018f), XMFLOAT2(0.7977885f, -0.001612663f), XMFLOAT2(0.2022116f, -0.001612544f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.4710608f, 1.109448f), XMFLOAT2(0.3517969f, 0.689586f), XMFLOAT2(0.2035472f, 0.4999999f), XMFLOAT2(0.6815742f, 0.3006409f), XMFLOAT2(0.798239f, 1.07395f), XMFLOAT2(0.5f, 0.1720724f)},
    { XMFLOAT2(0.5289392f, -0.1094477f), XMFLOAT2(0.6482264f, -0.03033018f), XMFLOAT2(0.7977885f, -0.001612663f), XMFLOAT2(0.2022116f, -0.001612544f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.6445344f, 0.890963f), XMFLOAT2(0.3554656f, 0.890963f), XMFLOAT2(0.1473338f, 0.3755451f), XMFLOAT2(0.4999999f, 0.03248978f), XMFLOAT2(0.8526661f, 0.375545f), XMFLOAT2(0.5f, 0.1720724f)},
    { XMFLOAT2(0.5289392f, -0.1094477f), XMFLOAT2(0.6482264f, -0.03033018f), XMFLOAT2(0.7977885f, -0.001612663f), XMFLOAT2(0.2022116f, -0.001612544f), XMFLOAT2(0.2903762f, 0.8061863f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.7096238f, 0.8061863f), XMFLOAT2(0.3554656f, 0.890963f), XMFLOAT2(0.2903762f, 0.1938138f), XMFLOAT2(0.4999999f, 0.03248978f), XMFLOAT2(0.8526661f, 0.375545f), XMFLOAT2(0.7096238f, 0.1938138f)},
    { XMFLOAT2(0.3064758f, 0.1431893f), XMFLOAT2(0.6482264f, -0.03033018f), XMFLOAT2(0.7977885f, -0.001612663f), XMFLOAT2(0.5609664f, -0.002164066f), XMFLOAT2(0.1936062f, 1.004413f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.6252022f, 0.9692884f), XMFLOAT2(0.3554656f, 0.890963f), XMFLOAT2(0.2903762f, 0.1938138f), XMFLOAT2(0.4999999f, 0.03248978f), XMFLOAT2(0.8526661f, 0.375545f), XMFLOAT2(0.7505747f, 0.4892771f)},
    { XMFLOAT2(0.3938601f, 0.1159534f), XMFLOAT2(0.4589318f, 0.4628057f), XMFLOAT2(0.7977885f, -0.001612663f), XMFLOAT2(0.5609664f, -0.002164066f), XMFLOAT2(0.2655363f, 0.9236652f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.7301055f, 1.055175f), XMFLOAT2(0.3554656f, 0.890963f), XMFLOAT2(0.4919947f, -0.1432633f), XMFLOAT2(0.2913441f, 0.5989437f), XMFLOAT2(0.8526661f, 0.375545f), XMFLOAT2(0.8535773f, 0.4734538f)},
    { XMFLOAT2(0.3938601f, 0.1159534f), XMFLOAT2(0.3862252f, 0.1461808f), XMFLOAT2(0.7977885f, -0.001612663f), XMFLOAT2(0.7474118f, -0.1691477f), XMFLOAT2(0.2873961f, 1.16116f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.6058086f, 0.786169f), XMFLOAT2(0.3554656f, 0.890963f), XMFLOAT2(0.4919947f, -0.1432633f), XMFLOAT2(0.2035472f, 0.5f), XMFLOAT2(0.8526661f, 0.375545f), XMFLOAT2(0.7964528f, 0.5f)},
    { XMFLOAT2(0.3938601f, 0.1159534f), XMFLOAT2(0.5410682f, 0.4628057f), XMFLOAT2(0.60614f, 0.1159534f), XMFLOAT2(0.7474118f, -0.1691477f), XMFLOAT2(0.2698945f, 1.055175f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.7344638f, 0.9236653f), XMFLOAT2(0.3554656f, 0.890963f), XMFLOAT2(0.1464227f, 0.4734538f), XMFLOAT2(0.2035472f, 0.5f), XMFLOAT2(0.7086559f, 0.5989438f), XMFLOAT2(0.5080054f, -0.1432633f)},
    { XMFLOAT2(0.2321706f, 0.09988615f), XMFLOAT2(0.4204973f, 0.3773749f), XMFLOAT2(0.6187003f, 0.2822486f), XMFLOAT2(0.5358424f, -0.2083755f), XMFLOAT2(0.08552539f, 1.260339f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.6606977f, 1.096643f), XMFLOAT2(0.3554656f, 0.890963f), XMFLOAT2(0.1464227f, 0.4734538f), XMFLOAT2(0.2035472f, 0.5f), XMFLOAT2(0.5495548f, 0.6775635f), XMFLOAT2(0.8447613f, 0.5101718f)},
    { XMFLOAT2(0.2321706f, 0.09988615f), XMFLOAT2(0.4204973f, 0.3773749f), XMFLOAT2(0.6187003f, 0.2822486f), XMFLOAT2(0.5358424f, -0.2083755f), XMFLOAT2(0.08552539f, 1.260339f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.6606977f, 1.096643f), XMFLOAT2(0.3554656f, 0.890963f), XMFLOAT2(-0.05742651f, 0.2108008f), XMFLOAT2(0.2349562f, 0.6450345f), XMFLOAT2(0.5495548f, 0.6775635f), XMFLOAT2(0.8447613f, 0.5101718f)},
    { XMFLOAT2(0.2321706f, 0.09988615f), XMFLOAT2(0.4204973f, 0.3773749f), XMFLOAT2(0.5442622f, 0.0642142f), XMFLOAT2(0.8212134f, -0.09008056f), XMFLOAT2(0.3438976f, 1.481294f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.5345871f, 0.713454f), XMFLOAT2(0.3554656f, 0.890963f), XMFLOAT2(-0.05742651f, 0.2108008f), XMFLOAT2(0.00997287f, 0.7056698f), XMFLOAT2(0.4014112f, 0.4041196f), XMFLOAT2(0.7146914f, 0.4600788f)},
    { XMFLOAT2(0.2321706f, 0.09988615f), XMFLOAT2(0.4204973f, 0.3773749f), XMFLOAT2(0.6935242f, 0.1431893f), XMFLOAT2(0.4390335f, -0.002164066f), XMFLOAT2(0.3747978f, 0.9692884f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.8063937f, 1.004413f), XMFLOAT2(0.3554656f, 0.890963f), XMFLOAT2(0.2494252f, 0.489277f), XMFLOAT2(0.00997287f, 0.7056698f), XMFLOAT2(0.4014112f, 0.4041196f), XMFLOAT2(0.7146914f, 0.4600788f)},
    { XMFLOAT2(0.2903762f, 0.06698731f), XMFLOAT2(0.4204973f, 0.3773749f), XMFLOAT2(0.7096238f, 0.06698731f), XMFLOAT2(0.4390335f, -0.002164066f), XMFLOAT2(0.2903762f, 0.9330127f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.7096238f, 0.9330127f), XMFLOAT2(0.3554656f, 0.890963f), XMFLOAT2(0.2494252f, 0.489277f), XMFLOAT2(0.00997287f, 0.7056698f), XMFLOAT2(0.4014112f, 0.4041196f), XMFLOAT2(0.7146914f, 0.4600788f)},
    { XMFLOAT2(0.3812997f, 0.2822486f), XMFLOAT2(0.5795027f, 0.3773749f), XMFLOAT2(0.7678295f, 0.09988615f), XMFLOAT2(0.4641576f, -0.2083755f), XMFLOAT2(0.3393024f, 1.096643f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.9144746f, 1.260339f), XMFLOAT2(0.3554656f, 0.890963f), XMFLOAT2(0.1552388f, 0.5101718f), XMFLOAT2(0.4504452f, 0.6775635f), XMFLOAT2(0.4014112f, 0.4041196f), XMFLOAT2(0.7146914f, 0.4600788f)},
    { XMFLOAT2(0.3812997f, 0.2822486f), XMFLOAT2(0.4420706f, 0.02285135f), XMFLOAT2(0.7669163f, 0.007872403f), XMFLOAT2(0.4641576f, -0.2083755f), XMFLOAT2(0.3273161f, 1.147261f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.6769902f, 0.7913771f), XMFLOAT2(0.3554656f, 0.890963f), XMFLOAT2(0.1552388f, 0.5101718f), XMFLOAT2(0.2619076f, 0.4898112f), XMFLOAT2(0.4014112f, 0.4041196f), XMFLOAT2(0.7146914f, 0.4600788f)},
    { XMFLOAT2(0.3812997f, 0.2822486f), XMFLOAT2(0.6058086f, 0.2138309f), XMFLOAT2(0.7669163f, 0.007872403f), XMFLOAT2(0.2873961f, -0.1611603f), XMFLOAT2(0.3862252f, 0.8538191f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.7474118f, 1.169148f), XMFLOAT2(0.3554656f, 0.890963f), XMFLOAT2(0.2035472f, 0.4999999f), XMFLOAT2(0.2619076f, 0.4898112f), XMFLOAT2(0.7964528f, 0.4999999f), XMFLOAT2(0.7146914f, 0.4600788f)},
    { XMFLOAT2(0.2330837f, 0.007872373f), XMFLOAT2(0.5579295f, 0.02285126f), XMFLOAT2(0.7669163f, 0.007872403f), XMFLOAT2(0.2873961f, -0.1611603f), XMFLOAT2(0.3230098f, 0.7913771f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.672684f, 1.147261f), XMFLOAT2(0.3554656f, 0.890963f), XMFLOAT2(0.2035472f, 0.4999999f), XMFLOAT2(0.2619076f, 0.4898112f), XMFLOAT2(0.7380924f, 0.4898112f), XMFLOAT2(0.7146914f, 0.4600788f)},
    { XMFLOAT2(0.4557379f, 0.0642142f), XMFLOAT2(0.5579295f, 0.02285126f), XMFLOAT2(0.7669163f, 0.007872403f), XMFLOAT2(0.1787867f, -0.0900805f), XMFLOAT2(0.4654129f, 0.7134539f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.6561024f, 1.481294f), XMFLOAT2(0.3554656f, 0.890963f), XMFLOAT2(0.2853087f, 0.4600788f), XMFLOAT2(0.5985888f, 0.4041196f), XMFLOAT2(0.9900272f, 0.70567f), XMFLOAT2(0.7146914f, 0.4600788f)},
    { XMFLOAT2(0.4557379f, 0.0642142f), XMFLOAT2(0.5579295f, 0.02285126f), XMFLOAT2(0.7669163f, 0.007872403f), XMFLOAT2(0.1787867f, -0.0900805f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.7096238f, 0.8061861f), XMFLOAT2(0.3554656f, 0.890963f), XMFLOAT2(0.2853087f, 0.4600788f), XMFLOAT2(0.2903762f, 0.1938137f), XMFLOAT2(0.7096238f, 0.1938137f), XMFLOAT2(0.7146914f, 0.4600788f)},
    { XMFLOAT2(0.4557379f, 0.0642142f), XMFLOAT2(0.5579295f, 0.02285126f), XMFLOAT2(0.7669163f, 0.007872403f), XMFLOAT2(0.1787867f, -0.0900805f), XMFLOAT2(0.2484514f, 0.5000001f), XMFLOAT2(0.5f, 1.019615f), XMFLOAT2(0.7515485f, 0.5000001f), XMFLOAT2(0.5f, -0.01961517f), XMFLOAT2(0.2853087f, 0.4600788f), XMFLOAT2(0.3427821f, 0.8247597f), XMFLOAT2(0.7096238f, 0.1938137f), XMFLOAT2(0.6572178f, 0.1752405f)},
    { XMFLOAT2(0.3756959f, 0.05526018f), XMFLOAT2(0.5579295f, 0.02285126f), XMFLOAT2(0.7669163f, 0.007872403f), XMFLOAT2(0.6243041f, 0.05526024f), XMFLOAT2(0.2590206f, 0.7873952f), XMFLOAT2(0.3756959f, 0.9447399f), XMFLOAT2(0.6243041f, 0.9447399f), XMFLOAT2(0.7409794f, 0.7873952f), XMFLOAT2(0.5f, -0.07479018f), XMFLOAT2(0.2513918f, 0.5000001f), XMFLOAT2(0.7096238f, 0.1938137f), XMFLOAT2(0.7486081f, 0.5000001f)},
    { XMFLOAT2(0.6537464f, -0.1582448f), XMFLOAT2(0.3462536f, -0.1582449f), XMFLOAT2(0.7669163f, 0.007872403f), XMFLOAT2(0.6243041f, 0.05526024f), XMFLOAT2(0.7819847f, 0.7734427f), XMFLOAT2(0.2180153f, 0.7734427f), XMFLOAT2(0.3723477f, 0.855009f), XMFLOAT2(0.6276523f, 0.8550089f), XMFLOAT2(0.5f, -0.07479018f), XMFLOAT2(0.2513918f, 0.5000001f), XMFLOAT2(0.7096238f, 0.1938137f), XMFLOAT2(0.4999999f, 0.5926287f)},
    { XMFLOAT2(0.6537464f, -0.1582448f), XMFLOAT2(0.08552545f, -0.2603386f), XMFLOAT2(0.7669163f, 0.007872403f), XMFLOAT2(0.6606977f, -0.09664327f), XMFLOAT2(0.5358425f, 1.208375f), XMFLOAT2(0.2321706f, 0.9001138f), XMFLOAT2(0.4204973f, 0.6226251f), XMFLOAT2(0.6187004f, 0.7177515f), XMFLOAT2(0.8447614f, 0.4898281f), XMFLOAT2(0.2513918f, 0.5000001f), XMFLOAT2(0.7096238f, 0.1938137f), XMFLOAT2(0.5495548f, 0.3224365f)},
    { XMFLOAT2(0.6537464f, -0.1582448f), XMFLOAT2(0.6243041f, 0.05526027f), XMFLOAT2(0.375696f, 0.05526033f), XMFLOAT2(0.6606977f, -0.09664327f), XMFLOAT2(0.6243041f, 0.9447398f), XMFLOAT2(0.7409794f, 0.7873951f), XMFLOAT2(0.2590207f, 0.7873951f), XMFLOAT2(0.375696f, 0.9447398f), XMFLOAT2(0.8447614f, 0.4898281f), XMFLOAT2(0.7486082f, 0.5000001f), XMFLOAT2(0.5f, -0.07479f), XMFLOAT2(0.2513919f, 0.5000001f)},
    { XMFLOAT2(0.5837532f, 0.400115f), XMFLOAT2(0.6243041f, 0.05526027f), XMFLOAT2(0.375696f, 0.05526033f), XMFLOAT2(0.4162469f, 0.400115f), XMFLOAT2(0.6243041f, 0.9447398f), XMFLOAT2(0.7409794f, 0.7873951f), XMFLOAT2(0.2590207f, 0.7873951f), XMFLOAT2(0.375696f, 0.9447398f), XMFLOAT2(0.5000001f, 0.6997702f), XMFLOAT2(0.7486082f, 0.5000001f), XMFLOAT2(0.5f, -0.07479f), XMFLOAT2(0.2513919f, 0.5000001f)},
    { XMFLOAT2(0.9144746f, -0.2603387f), XMFLOAT2(0.6243041f, 0.05526027f), XMFLOAT2(0.3393023f, -0.09664327f), XMFLOAT2(0.4162469f, 0.400115f), XMFLOAT2(0.7678295f, 0.9001138f), XMFLOAT2(0.4641576f, 1.208375f), XMFLOAT2(0.3812997f, 0.7177514f), XMFLOAT2(0.5795027f, 0.6226251f), XMFLOAT2(0.5000001f, 0.6997702f), XMFLOAT2(0.7486082f, 0.5000001f), XMFLOAT2(0.1552388f, 0.4898281f), XMFLOAT2(0.4504452f, 0.3224365f)},
    { XMFLOAT2(0.9144746f, -0.2603387f), XMFLOAT2(0.6243041f, 0.05526027f), XMFLOAT2(0.3164491f, -0.1567149f), XMFLOAT2(0.6835507f, -0.1567149f), XMFLOAT2(0.6835508f, 1.156715f), XMFLOAT2(0.3164492f, 1.156715f), XMFLOAT2(0.3929695f, 0.6276458f), XMFLOAT2(0.6070303f, 0.6276457f), XMFLOAT2(0.8671014f, 0.4999999f), XMFLOAT2(0.7486082f, 0.5000001f), XMFLOAT2(0.1328983f, 0.5f), XMFLOAT2(0.4999999f, 0.2447084f)},
    { XMFLOAT2(0.9144746f, -0.2603387f), XMFLOAT2(0.6243041f, 0.05526027f), XMFLOAT2(0.6537464f, -0.158245f), XMFLOAT2(0.3462536f, -0.158245f), XMFLOAT2(0.3723477f, 0.855009f), XMFLOAT2(0.6276523f, 0.855009f), XMFLOAT2(0.7819848f, 0.7734427f), XMFLOAT2(0.2180153f, 0.7734429f), XMFLOAT2(0.8671014f, 0.4999999f), XMFLOAT2(0.5f, 0.5926287f), XMFLOAT2(0.1328983f, 0.5f), XMFLOAT2(0.4999999f, 0.2447084f)},
    { XMFLOAT2(0.3393024f, -0.09664333f), XMFLOAT2(0.6243041f, 0.05526027f), XMFLOAT2(0.9144747f, -0.2603388f), XMFLOAT2(0.3462536f, -0.158245f), XMFLOAT2(0.3812997f, 0.7177514f), XMFLOAT2(0.5795027f, 0.6226251f), XMFLOAT2(0.7678295f, 0.9001138f), XMFLOAT2(0.4641576f, 1.208375f), XMFLOAT2(0.1552388f, 0.4898281f), XMFLOAT2(0.4504452f, 0.3224365f), XMFLOAT2(0.1328983f, 0.5f), XMFLOAT2(0.4999999f, 0.2447084f)},
    { XMFLOAT2(0.3393024f, -0.09664333f), XMFLOAT2(0.6010342f, -0.02652222f), XMFLOAT2(0.9144747f, -0.2603388f), XMFLOAT2(0.4268354f, -0.6775604f), XMFLOAT2(0.3812997f, 0.7177514f), XMFLOAT2(0.5795027f, 0.6226251f), XMFLOAT2(0.7678295f, 0.9001138f), XMFLOAT2(0.4641576f, 1.208375f), XMFLOAT2(0.1552388f, 0.4898281f), XMFLOAT2(0.4504452f, 0.3224365f), XMFLOAT2(0.1328983f, 0.5f), XMFLOAT2(0.4999999f, 0.2447084f)},
    { XMFLOAT2(0.3393024f, -0.09664333f), XMFLOAT2(0.2487561f, -0.3930672f), XMFLOAT2(0.7512437f, -0.3930671f), XMFLOAT2(0.4268354f, -0.6775604f), XMFLOAT2(0.3717697f, 0.8579202f), XMFLOAT2(0.3997989f, 0.4115381f), XMFLOAT2(0.6002011f, 0.411538f), XMFLOAT2(0.6282303f, 0.8579201f), XMFLOAT2(0.5000001f, 1.387949f), XMFLOAT2(0.4504452f, 0.3224365f), XMFLOAT2(0.1328983f, 0.5f), XMFLOAT2(0.4999999f, 0.2447084f)},
    { XMFLOAT2(0.3393024f, -0.09664333f), XMFLOAT2(0.6606976f, -0.09664315f), XMFLOAT2(0.7512437f, -0.3930671f), XMFLOAT2(0.08552536f, -0.2603385f), XMFLOAT2(0.4204972f, 0.6226252f), XMFLOAT2(0.6187003f, 0.7177514f), XMFLOAT2(0.5358424f, 1.208375f), XMFLOAT2(0.2321705f, 0.9001138f), XMFLOAT2(0.5000001f, 1.387949f), XMFLOAT2(0.5495547f, 0.3224365f), XMFLOAT2(0.844761f, 0.4898281f), XMFLOAT2(0.4999999f, 0.2447084f)},
    { XMFLOAT2(0.3164493f, -0.1567149f), XMFLOAT2(0.6835508f, -0.1567149f), XMFLOAT2(0.7512437f, -0.3930671f), XMFLOAT2(0.08552536f, -0.2603385f), XMFLOAT2(0.3929696f, 0.6276458f), XMFLOAT2(0.6070304f, 0.6276458f), XMFLOAT2(0.6835507f, 1.156715f), XMFLOAT2(0.3164492f, 1.156715f), XMFLOAT2(0.1328985f, 0.5f), XMFLOAT2(0.5f, 0.2447084f), XMFLOAT2(0.8671014f, 0.4999999f), XMFLOAT2(0.4999999f, 0.2447084f)},
    { XMFLOAT2(0.7512438f, -0.3930671f), XMFLOAT2(0.6835508f, -0.1567149f), XMFLOAT2(0.7512437f, -0.3930671f), XMFLOAT2(0.2487562f, -0.3930669f), XMFLOAT2(0.6002011f, 0.411538f), XMFLOAT2(0.6282303f, 0.8579201f), XMFLOAT2(0.3717697f, 0.8579202f), XMFLOAT2(0.3997989f, 0.4115381f), XMFLOAT2(0.1328985f, 0.5f), XMFLOAT2(0.5f, 0.2447084f), XMFLOAT2(0.5000001f, 1.387949f), XMFLOAT2(0.4999999f, 0.2447084f)},
    { XMFLOAT2(0.7512438f, -0.3930671f), XMFLOAT2(0.6835508f, -0.1567149f), XMFLOAT2(0.7512437f, -0.3930671f), XMFLOAT2(0.2487562f, -0.3930669f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.5f, 0.1288461f), XMFLOAT2(0.6796775f, 0.4999999f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.1855644f, 1.149519f), XMFLOAT2(0.5f, 0.2447084f), XMFLOAT2(0.8144357f, -0.1495192f), XMFLOAT2(0.4999999f, 0.2447084f)},
    { XMFLOAT2(0.7512438f, -0.3930671f), XMFLOAT2(0.6835508f, -0.1567149f), XMFLOAT2(0.7512437f, -0.3930671f), XMFLOAT2(0.2487562f, -0.3930669f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.3478882f, 0.9114598f), XMFLOAT2(0.6521119f, 0.9114598f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.5f, -0.3093229f), XMFLOAT2(0.2443041f, 0.4097656f), XMFLOAT2(0.8144357f, -0.1495192f), XMFLOAT2(0.755696f, 0.4097655f)},
    { XMFLOAT2(0.3517736f, -0.03033006f), XMFLOAT2(0.6835508f, -0.1567149f), XMFLOAT2(0.7512437f, -0.3930671f), XMFLOAT2(0.6482264f, -0.03033006f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.3517736f, 1.03033f), XMFLOAT2(0.6482264f, 1.03033f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.5f, -0.3093229f), XMFLOAT2(0.2035472f, 0.5000001f), XMFLOAT2(0.8144357f, -0.1495192f), XMFLOAT2(0.7964528f, 0.5f)},
    { XMFLOAT2(0.5289392f, -0.1094478f), XMFLOAT2(0.3406388f, 0.2315626f), XMFLOAT2(0.7512437f, -0.3930671f), XMFLOAT2(0.6482264f, -0.03033006f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.1534572f, 0.9433083f), XMFLOAT2(0.4710608f, 1.109448f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.8392965f, 0.12747f), XMFLOAT2(0.2035472f, 0.5000001f), XMFLOAT2(0.8144357f, -0.1495192f), XMFLOAT2(0.6275454f, 0.7454567f)},
    { XMFLOAT2(0.5289392f, -0.1094478f), XMFLOAT2(0.3230098f, 0.2086231f), XMFLOAT2(0.7512437f, -0.3930671f), XMFLOAT2(0.6726838f, -0.1472613f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.2330836f, 0.9921276f), XMFLOAT2(0.5579293f, 0.9771488f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.8392965f, 0.12747f), XMFLOAT2(0.2035472f, 0.5000001f), XMFLOAT2(0.8144357f, -0.1495192f), XMFLOAT2(0.7380923f, 0.5101889f)},
    { XMFLOAT2(0.5289392f, -0.1094478f), XMFLOAT2(0.4028216f, 0.4586323f), XMFLOAT2(0.5971785f, 0.4586323f), XMFLOAT2(0.6726838f, -0.1472613f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.2673885f, 1.025738f), XMFLOAT2(0.7326114f, 1.025738f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.5f, -0.6450478f), XMFLOAT2(0.1773252f, 0.3520164f), XMFLOAT2(0.5f, 0.8279276f), XMFLOAT2(0.8226748f, 0.3520164f)},
    { XMFLOAT2(0.3164492f, -0.1567149f), XMFLOAT2(0.3929696f, 0.3723542f), XMFLOAT2(0.6070303f, 0.3723542f), XMFLOAT2(0.6835507f, -0.1567149f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.3164492f, 1.156715f), XMFLOAT2(0.6835507f, 1.156715f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.5f, -0.6450478f), XMFLOAT2(0.1328984f, 0.5000001f), XMFLOAT2(0.4999999f, 0.7552917f), XMFLOAT2(0.8671014f, 0.5f)},
    { XMFLOAT2(0.6561024f, -0.4812936f), XMFLOAT2(0.3929696f, 0.3723542f), XMFLOAT2(0.4654129f, 0.2865461f), XMFLOAT2(0.6835507f, -0.1567149f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.1787866f, 1.090081f), XMFLOAT2(0.4557378f, 0.9357858f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.9900271f, 0.2943303f), XMFLOAT2(0.1328984f, 0.5000001f), XMFLOAT2(0.2853085f, 0.5399213f), XMFLOAT2(0.5985888f, 0.5958805f)},
    { XMFLOAT2(0.6561024f, -0.4812936f), XMFLOAT2(0.3929696f, 0.3723542f), XMFLOAT2(0.4999999f, 0.1288463f), XMFLOAT2(0.8144356f, -0.1495189f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.1855642f, 1.149519f), XMFLOAT2(0.4999999f, 0.8711537f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.9900271f, 0.2943303f), XMFLOAT2(0.1328984f, 0.5000001f), XMFLOAT2(0.3203224f, 0.5f), XMFLOAT2(0.6796775f, 0.5f)},
    { XMFLOAT2(0.6561024f, -0.4812936f), XMFLOAT2(0.3929696f, 0.3723542f), XMFLOAT2(0.6482031f, 0.3104142f), XMFLOAT2(0.5289392f, -0.1094475f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.4710608f, 1.109448f), XMFLOAT2(0.7977885f, 1.001613f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.201761f, -0.07394981f), XMFLOAT2(0.3184258f, 0.6993592f), XMFLOAT2(0.3203224f, 0.5f), XMFLOAT2(0.6796775f, 0.5f)},
    { XMFLOAT2(0.327316f, -0.1472615f), XMFLOAT2(0.3929696f, 0.3723542f), XMFLOAT2(0.6769902f, 0.2086229f), XMFLOAT2(0.5289392f, -0.1094475f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.4420705f, 0.9771488f), XMFLOAT2(0.7669163f, 0.9921275f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.201761f, -0.07394981f), XMFLOAT2(0.2619076f, 0.5101888f), XMFLOAT2(0.3203224f, 0.5f), XMFLOAT2(0.6796775f, 0.5f)},
    { XMFLOAT2(0.3717697f, 0.14208f), XMFLOAT2(0.3997989f, 0.5884621f), XMFLOAT2(0.600201f, 0.588462f), XMFLOAT2(0.6282303f, 0.1420799f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.2487561f, 1.393067f), XMFLOAT2(0.7512437f, 1.393067f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.4999999f, -0.3879486f), XMFLOAT2(0.2619076f, 0.5101888f), XMFLOAT2(0.3203224f, 0.5f), XMFLOAT2(0.6796775f, 0.5f)},
    { XMFLOAT2(0.3717697f, 0.14208f), XMFLOAT2(0.3517736f, 0.06698725f), XMFLOAT2(0.6482264f, 0.06698725f), XMFLOAT2(0.6282303f, 0.1420799f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.3517736f, 0.9330127f), XMFLOAT2(0.6482264f, 0.9330127f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.4999999f, -0.3879486f), XMFLOAT2(0.2619076f, 0.5101888f), XMFLOAT2(0.3203224f, 0.5f), XMFLOAT2(0.6796775f, 0.5f)},
    { XMFLOAT2(0.3717697f, 0.14208f), XMFLOAT2(0.5345871f, 0.2865461f), XMFLOAT2(0.6482264f, 0.06698725f), XMFLOAT2(0.3438976f, -0.4812937f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.5442622f, 0.9357859f), XMFLOAT2(0.8212134f, 1.09008f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.009972811f, 0.2943302f), XMFLOAT2(0.4014112f, 0.5958805f), XMFLOAT2(0.7146915f, 0.5399213f), XMFLOAT2(0.6796775f, 0.5f)},
    { XMFLOAT2(0.1855643f, -0.149519f), XMFLOAT2(0.5f, 0.1288463f), XMFLOAT2(0.6482264f, 0.06698725f), XMFLOAT2(0.3438976f, -0.4812937f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.8144357f, 1.149519f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.009972811f, 0.2943302f), XMFLOAT2(0.3203225f, 0.5f), XMFLOAT2(0.6796775f, 0.5f), XMFLOAT2(0.6796775f, 0.5f)},
    { XMFLOAT2(0.1855643f, -0.149519f), XMFLOAT2(0.5f, 0.1288463f), XMFLOAT2(0.6482264f, 0.06698725f), XMFLOAT2(0.5f, -2.098076f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.8144357f, 1.149519f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(-0.7577425f, 0.5f), XMFLOAT2(0.3203225f, 0.5f), XMFLOAT2(0.6796775f, 0.5f), XMFLOAT2(0.6796775f, 0.5f)},
    { XMFLOAT2(0.1855643f, -0.149519f), XMFLOAT2(0.5f, 0.1288463f), XMFLOAT2(0.6482264f, 0.06698725f), XMFLOAT2(0.5f, -2.098076f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.3517736f, 0.6767767f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(-0.7577425f, 0.5f), XMFLOAT2(0.3203225f, 0.5f), XMFLOAT2(0.4999999f, 0.1464466f), XMFLOAT2(0.6796775f, 0.5f)},
    { XMFLOAT2(0.1855643f, -0.149519f), XMFLOAT2(0.5f, 0.1288463f), XMFLOAT2(0.6482264f, 0.06698725f), XMFLOAT2(0.5f, -2.098076f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.7096238f, 0.8061863f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2903763f, 0.8061862f), XMFLOAT2(-0.7577425f, 0.5f), XMFLOAT2(0.3203225f, 0.5f), XMFLOAT2(0.7096238f, 0.1938138f), XMFLOAT2(0.2903762f, 0.1938139f)},
    { XMFLOAT2(0.4589318f, 0.4628055f), XMFLOAT2(0.5f, 0.1288463f), XMFLOAT2(0.6482264f, 0.06698725f), XMFLOAT2(0.3938601f, 0.1159532f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.7301056f, 1.055174f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2655364f, 0.923665f), XMFLOAT2(0.2913442f, 0.5989436f), XMFLOAT2(0.3203225f, 0.5f), XMFLOAT2(0.8535773f, 0.4734536f), XMFLOAT2(0.4919947f, -0.1432635f)},
    { XMFLOAT2(0.5410682f, 0.4628055f), XMFLOAT2(0.6061399f, 0.1159532f), XMFLOAT2(0.6482264f, 0.06698725f), XMFLOAT2(0.3938601f, 0.1159532f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.7344637f, 0.923665f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2698945f, 1.055174f), XMFLOAT2(0.2913442f, 0.5989436f), XMFLOAT2(0.7086558f, 0.5989436f), XMFLOAT2(0.5080053f, -0.1432635f), XMFLOAT2(0.1464227f, 0.4734536f)},
    { XMFLOAT2(0.5410682f, 0.4628055f), XMFLOAT2(0.6061399f, 0.1159532f), XMFLOAT2(0.6482264f, 0.06698725f), XMFLOAT2(0.3613141f, 0.4166025f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.7344637f, 0.923665f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2698945f, 1.055174f), XMFLOAT2(0.4357312f, 0.7672088f), XMFLOAT2(0.7086558f, 0.5989436f), XMFLOAT2(0.5080053f, -0.1432635f), XMFLOAT2(0.1464227f, 0.4734536f)},
    { XMFLOAT2(0.5410682f, 0.4628055f), XMFLOAT2(0.6935242f, 0.1431893f), XMFLOAT2(0.4390335f, -0.002163947f), XMFLOAT2(0.3613141f, 0.4166025f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.8063938f, 1.004413f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3747978f, 0.9692884f), XMFLOAT2(0.4357312f, 0.7672088f), XMFLOAT2(0.7086558f, 0.5989436f), XMFLOAT2(0.5080053f, -0.1432635f), XMFLOAT2(0.2494252f, 0.4892771f)},
    { XMFLOAT2(0.5795027f, 0.3773749f), XMFLOAT2(0.7678294f, 0.09988618f), XMFLOAT2(0.4641575f, -0.2083755f), XMFLOAT2(0.3812996f, 0.2822486f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.9144745f, 1.260339f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3393023f, 1.096643f), XMFLOAT2(0.4504452f, 0.6775635f), XMFLOAT2(0.7086558f, 0.5989436f), XMFLOAT2(0.5080053f, -0.1432635f), XMFLOAT2(0.1552387f, 0.5101718f)},
    { XMFLOAT2(0.6137748f, 0.1461808f), XMFLOAT2(0.7678294f, 0.09988618f), XMFLOAT2(0.2525883f, -0.1691476f), XMFLOAT2(0.3812996f, 0.2822486f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.712604f, 1.16116f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3941914f, 0.7861691f), XMFLOAT2(0.4504452f, 0.6775635f), XMFLOAT2(0.7964529f, 0.5000001f), XMFLOAT2(0.5080053f, -0.1432635f), XMFLOAT2(0.2035473f, 0.5f)},
    { XMFLOAT2(0.6137748f, 0.1461808f), XMFLOAT2(0.7678294f, 0.09988618f), XMFLOAT2(0.1787867f, -0.09008038f), XMFLOAT2(0.4557379f, 0.06421426f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.6561024f, 1.481294f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.465413f, 0.7134539f), XMFLOAT2(0.5985889f, 0.4041196f), XMFLOAT2(0.9900272f, 0.7056699f), XMFLOAT2(0.5080053f, -0.1432635f), XMFLOAT2(0.2853087f, 0.4600788f)},
    { XMFLOAT2(0.6137748f, 0.1461808f), XMFLOAT2(0.7678294f, 0.09988618f), XMFLOAT2(0.5609665f, -0.002163827f), XMFLOAT2(0.3064759f, 0.1431895f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.6252023f, 0.9692885f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.1936063f, 1.004413f), XMFLOAT2(0.5985889f, 0.4041196f), XMFLOAT2(0.9900272f, 0.7056699f), XMFLOAT2(0.7505748f, 0.4892772f), XMFLOAT2(0.2853087f, 0.4600788f)},
    { XMFLOAT2(0.3862252f, 0.1461808f), XMFLOAT2(0.7678294f, 0.09988618f), XMFLOAT2(0.7474117f, -0.1691477f), XMFLOAT2(0.3064759f, 0.1431895f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.6058086f, 0.7861691f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.287396f, 1.16116f), XMFLOAT2(0.2035472f, 0.5f), XMFLOAT2(0.9900272f, 0.7056699f), XMFLOAT2(0.7964528f, 0.5f), XMFLOAT2(0.2853087f, 0.4600788f)},
    { XMFLOAT2(0.4204973f, 0.3773749f), XMFLOAT2(0.6187003f, 0.2822486f), XMFLOAT2(0.5358424f, -0.2083755f), XMFLOAT2(0.2321706f, 0.09988615f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.6606976f, 1.096643f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.08552539f, 1.260339f), XMFLOAT2(0.2035472f, 0.5f), XMFLOAT2(0.5495548f, 0.6775635f), XMFLOAT2(0.8447612f, 0.5101718f), XMFLOAT2(0.2853087f, 0.4600788f)},
    { XMFLOAT2(0.4204973f, 0.3773749f), XMFLOAT2(0.5442622f, 0.0642142f), XMFLOAT2(0.8212134f, -0.0900805f), XMFLOAT2(0.2321706f, 0.09988615f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.5345871f, 0.7134539f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3438976f, 1.481294f), XMFLOAT2(0.009972781f, 0.7056698f), XMFLOAT2(0.4014112f, 0.4041196f), XMFLOAT2(0.7146914f, 0.4600788f), XMFLOAT2(0.2853087f, 0.4600788f)},
    { XMFLOAT2(0.4204973f, 0.3773749f), XMFLOAT2(0.7096238f, 0.06698731f), XMFLOAT2(0.8212134f, -0.0900805f), XMFLOAT2(0.2903763f, 0.0669874f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.7096238f, 0.9330127f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2903763f, 0.9330126f), XMFLOAT2(0.009972781f, 0.7056698f), XMFLOAT2(0.4014112f, 0.4041196f), XMFLOAT2(0.7146914f, 0.4600788f), XMFLOAT2(0.2853087f, 0.4600788f)},
    { XMFLOAT2(0.4420707f, 0.02285126f), XMFLOAT2(0.7669165f, 0.007872283f), XMFLOAT2(0.8212134f, -0.0900805f), XMFLOAT2(0.2903763f, 0.0669874f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.6769903f, 0.7913769f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3273162f, 1.147261f), XMFLOAT2(0.2619077f, 0.4898111f), XMFLOAT2(0.4014112f, 0.4041196f), XMFLOAT2(0.7146914f, 0.4600788f), XMFLOAT2(0.2853087f, 0.4600788f)},
    { XMFLOAT2(0.5579295f, 0.02285129f), XMFLOAT2(0.7669165f, 0.007872283f), XMFLOAT2(0.8212134f, -0.0900805f), XMFLOAT2(0.2330837f, 0.007872343f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.672684f, 1.147261f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3230098f, 0.7913771f), XMFLOAT2(0.2619077f, 0.4898111f), XMFLOAT2(0.7380924f, 0.4898111f), XMFLOAT2(0.7146914f, 0.4600788f), XMFLOAT2(0.2853087f, 0.4600788f)},
    { XMFLOAT2(0.5579295f, 0.02285129f), XMFLOAT2(0.7669165f, 0.007872283f), XMFLOAT2(0.8212134f, -0.0900805f), XMFLOAT2(0.2330837f, 0.007872343f), XMFLOAT2(0.3203225f, 0.4999999f), XMFLOAT2(0.7096239f, 0.8061862f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.2903762f, 0.1938137f), XMFLOAT2(0.7096239f, 0.1938137f), XMFLOAT2(0.7146914f, 0.4600788f), XMFLOAT2(0.2853087f, 0.4600788f)},
    { XMFLOAT2(0.5579295f, 0.02285129f), XMFLOAT2(0.7669165f, 0.007872283f), XMFLOAT2(0.8212134f, -0.0900805f), XMFLOAT2(0.2330837f, 0.007872343f), XMFLOAT2(0.3478881f, 0.9114597f), XMFLOAT2(0.6521118f, 0.9114597f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.244304f, 0.4097655f), XMFLOAT2(0.7096239f, 0.1938137f), XMFLOAT2(0.7556959f, 0.4097655f), XMFLOAT2(0.4999999f, -0.3093229f)},
    { XMFLOAT2(0.3517969f, 0.3104141f), XMFLOAT2(0.7669165f, 0.007872283f), XMFLOAT2(0.8212134f, -0.0900805f), XMFLOAT2(0.4710608f, -0.1094475f), XMFLOAT2(0.2022115f, 1.001613f), XMFLOAT2(0.5289392f, 1.109448f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.244304f, 0.4097655f), XMFLOAT2(0.7096239f, 0.1938137f), XMFLOAT2(0.6815742f, 0.6993591f), XMFLOAT2(0.7982389f, -0.07395005f)},
    { XMFLOAT2(0.4028216f, 0.4586324f), XMFLOAT2(0.5971785f, 0.4586324f), XMFLOAT2(0.8212134f, -0.0900805f), XMFLOAT2(0.4710608f, -0.1094475f), XMFLOAT2(0.2673885f, 1.025738f), XMFLOAT2(0.7326114f, 1.025738f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.1773252f, 0.3520164f), XMFLOAT2(0.5f, 0.8279276f), XMFLOAT2(0.8226747f, 0.3520164f), XMFLOAT2(0.4999999f, -0.6450478f)},
    { XMFLOAT2(0.4028216f, 0.4586324f), XMFLOAT2(0.4654129f, 0.2865461f), XMFLOAT2(0.8212134f, -0.0900805f), XMFLOAT2(0.6561024f, -0.4812936f), XMFLOAT2(0.1787866f, 1.090081f), XMFLOAT2(0.4557378f, 0.9357859f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.1773252f, 0.3520164f), XMFLOAT2(0.2853086f, 0.5399213f), XMFLOAT2(0.5985888f, 0.5958804f), XMFLOAT2(0.9900272f, 0.2943303f)},
    { XMFLOAT2(0.4028216f, 0.4586324f), XMFLOAT2(0.6593612f, 0.2315626f), XMFLOAT2(0.4710608f, -0.1094476f), XMFLOAT2(0.6561024f, -0.4812936f), XMFLOAT2(0.5289392f, 1.109448f), XMFLOAT2(0.8465428f, 0.9433081f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.3724546f, 0.7454566f), XMFLOAT2(0.2853086f, 0.5399213f), XMFLOAT2(0.5985888f, 0.5958804f), XMFLOAT2(0.1607035f, 0.12747f)},
    { XMFLOAT2(0.399799f, 0.5884619f), XMFLOAT2(0.6002011f, 0.5884619f), XMFLOAT2(0.6282303f, 0.1420799f), XMFLOAT2(0.3717697f, 0.1420799f), XMFLOAT2(0.2487563f, 1.393067f), XMFLOAT2(0.7512439f, 1.393067f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.3724546f, 0.7454566f), XMFLOAT2(0.2853086f, 0.5399213f), XMFLOAT2(0.5985888f, 0.5958804f), XMFLOAT2(0.5f, -0.3879486f)},
    { XMFLOAT2(0.534587f, 0.286546f), XMFLOAT2(0.6002011f, 0.5884619f), XMFLOAT2(0.3438975f, -0.481294f), XMFLOAT2(0.3717697f, 0.1420799f), XMFLOAT2(0.5442621f, 0.9357858f), XMFLOAT2(0.8212134f, 1.09008f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.4014111f, 0.5958804f), XMFLOAT2(0.7146913f, 0.5399212f), XMFLOAT2(0.5985888f, 0.5958804f), XMFLOAT2(0.009972572f, 0.29433f)},
    { XMFLOAT2(0.534587f, 0.286546f), XMFLOAT2(0.6002011f, 0.5884619f), XMFLOAT2(0.3438975f, -0.481294f), XMFLOAT2(0.318214f, 0.1660526f), XMFLOAT2(0.5442621f, 0.9357858f), XMFLOAT2(0.8212134f, 1.09008f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.4014111f, 0.5958804f), XMFLOAT2(0.7146913f, 0.5399212f), XMFLOAT2(0.5985888f, 0.5958804f), XMFLOAT2(0.009972572f, 0.29433f)},
    { XMFLOAT2(0.534587f, 0.286546f), XMFLOAT2(0.6002011f, 0.5884619f), XMFLOAT2(0.6482264f, -0.03033f), XMFLOAT2(0.3517736f, -0.03033006f), XMFLOAT2(0.3517736f, 1.03033f), XMFLOAT2(0.6482264f, 1.03033f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.2035472f, 0.5f), XMFLOAT2(0.7146913f, 0.5399212f), XMFLOAT2(0.7964528f, 0.5000001f), XMFLOAT2(0.009972572f, 0.29433f)},
    { XMFLOAT2(0.3230098f, 0.2086229f), XMFLOAT2(0.6002011f, 0.5884619f), XMFLOAT2(0.672684f, -0.1472615f), XMFLOAT2(0.3517736f, -0.03033006f), XMFLOAT2(0.2330837f, 0.9921275f), XMFLOAT2(0.5579295f, 0.9771487f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.2035472f, 0.5f), XMFLOAT2(0.7146913f, 0.5399212f), XMFLOAT2(0.7380924f, 0.5101888f), XMFLOAT2(0.009972572f, 0.29433f)},
    { XMFLOAT2(0.3929696f, 0.3723542f), XMFLOAT2(0.6070304f, 0.3723543f), XMFLOAT2(0.6835508f, -0.1567149f), XMFLOAT2(0.3164492f, -0.156715f), XMFLOAT2(0.3164492f, 1.156715f), XMFLOAT2(0.6835508f, 1.156715f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.1328984f, 0.5000001f), XMFLOAT2(0.5f, 0.7552917f), XMFLOAT2(0.8671016f, 0.5000001f), XMFLOAT2(0.009972572f, 0.29433f)},
    { XMFLOAT2(0.3929696f, 0.3723542f), XMFLOAT2(0.5f, 0.1288463f), XMFLOAT2(0.8144357f, -0.149519f), XMFLOAT2(0.3164492f, -0.156715f), XMFLOAT2(0.1855643f, 1.149519f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.1328984f, 0.5000001f), XMFLOAT2(0.3203225f, 0.5f), XMFLOAT2(0.6796775f, 0.5f), XMFLOAT2(0.009972572f, 0.29433f)},
    { XMFLOAT2(0.3929696f, 0.3723542f), XMFLOAT2(0.6769903f, 0.2086231f), XMFLOAT2(0.8144357f, -0.149519f), XMFLOAT2(0.3273161f, -0.1472612f), XMFLOAT2(0.4420706f, 0.9771488f), XMFLOAT2(0.7669165f, 0.9921277f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.2619077f, 0.5101889f), XMFLOAT2(0.3203225f, 0.5f), XMFLOAT2(0.6796775f, 0.5f), XMFLOAT2(0.009972572f, 0.29433f)},
    { XMFLOAT2(0.3517736f, 0.06698725f), XMFLOAT2(0.6482264f, 0.06698725f), XMFLOAT2(0.8144357f, -0.149519f), XMFLOAT2(0.3273161f, -0.1472612f), XMFLOAT2(0.3517736f, 0.9330127f), XMFLOAT2(0.6482264f, 0.9330127f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.2619077f, 0.5101889f), XMFLOAT2(0.3203225f, 0.5f), XMFLOAT2(0.6796775f, 0.5f), XMFLOAT2(0.009972572f, 0.29433f)},
    { XMFLOAT2(0.5000001f, 0.1288463f), XMFLOAT2(0.6482264f, 0.06698725f), XMFLOAT2(0.8144357f, -0.149519f), XMFLOAT2(0.1855644f, -0.149519f), XMFLOAT2(0.5000001f, 0.8711537f), XMFLOAT2(0.8144358f, 1.149519f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.3203225f, 0.5f), XMFLOAT2(0.6796776f, 0.5f), XMFLOAT2(0.6796775f, 0.5f), XMFLOAT2(0.009972572f, 0.29433f)},
    { XMFLOAT2(0.5000001f, 0.1288463f), XMFLOAT2(0.6482264f, 0.06698725f), XMFLOAT2(0.8144357f, -0.149519f), XMFLOAT2(0.1855644f, -0.149519f), XMFLOAT2(0.3517736f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2903762f, 0.8061861f), XMFLOAT2(0.3203225f, 0.5f), XMFLOAT2(0.5f, 0.1464466f), XMFLOAT2(0.6796775f, 0.5f), XMFLOAT2(0.009972572f, 0.29433f)},
    { XMFLOAT2(0.5000001f, 0.1288463f), XMFLOAT2(0.6482264f, 0.06698725f), XMFLOAT2(0.8144357f, -0.149519f), XMFLOAT2(0.1855644f, -0.149519f), XMFLOAT2(0.6521119f, 0.9114598f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3478881f, 0.9114598f), XMFLOAT2(0.3203225f, 0.5f), XMFLOAT2(0.7556961f, 0.4097655f), XMFLOAT2(0.5f, -0.309323f), XMFLOAT2(0.244304f, 0.4097655f)},
    { XMFLOAT2(0.5971785f, 0.4586324f), XMFLOAT2(0.6482264f, 0.06698725f), XMFLOAT2(0.8144357f, -0.149519f), XMFLOAT2(0.4028216f, 0.4586324f), XMFLOAT2(0.7326114f, 1.025737f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2673886f, 1.025737f), XMFLOAT2(0.5f, 0.8279276f), XMFLOAT2(0.8226747f, 0.3520164f), XMFLOAT2(0.5f, -0.6450474f), XMFLOAT2(0.1773253f, 0.3520164f)},
    { XMFLOAT2(0.6593612f, 0.2315627f), XMFLOAT2(0.4710608f, -0.1094475f), XMFLOAT2(0.8144357f, -0.149519f), XMFLOAT2(0.4028216f, 0.4586324f), XMFLOAT2(0.8465427f, 0.9433082f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.5289392f, 1.109448f), XMFLOAT2(0.5f, 0.8279276f), XMFLOAT2(0.8226747f, 0.3520164f), XMFLOAT2(0.1607035f, 0.1274702f), XMFLOAT2(0.3724546f, 0.7454567f)},
    { XMFLOAT2(0.6593612f, 0.2315627f), XMFLOAT2(0.3438975f, -0.4812935f), XMFLOAT2(0.8144357f, -0.149519f), XMFLOAT2(0.5345871f, 0.2865462f), XMFLOAT2(0.8212133f, 1.09008f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.5442621f, 0.9357858f), XMFLOAT2(0.7146913f, 0.5399213f), XMFLOAT2(0.8226747f, 0.3520164f), XMFLOAT2(0.009972572f, 0.2943302f), XMFLOAT2(0.4014111f, 0.5958805f)},
    { XMFLOAT2(0.6593612f, 0.2315627f), XMFLOAT2(0.6482264f, -0.03033f), XMFLOAT2(0.3517736f, -0.03032994f), XMFLOAT2(0.5345871f, 0.2865462f), XMFLOAT2(0.6482265f, 1.03033f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3517736f, 1.03033f), XMFLOAT2(0.7146913f, 0.5399213f), XMFLOAT2(0.7964529f, 0.5000001f), XMFLOAT2(0.009972572f, 0.2943302f), XMFLOAT2(0.2035472f, 0.5000001f)},
    { XMFLOAT2(0.6070305f, 0.3723543f), XMFLOAT2(0.6835508f, -0.1567148f), XMFLOAT2(0.3164492f, -0.1567147f), XMFLOAT2(0.3929697f, 0.3723543f), XMFLOAT2(0.6835508f, 1.156715f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3164493f, 1.156715f), XMFLOAT2(0.5000001f, 0.7552916f), XMFLOAT2(0.8671016f, 0.5000001f), XMFLOAT2(0.009972572f, 0.2943302f), XMFLOAT2(0.1328986f, 0.5000001f)},
    { XMFLOAT2(0.6769902f, 0.2086229f), XMFLOAT2(0.6835508f, -0.1567148f), XMFLOAT2(0.3273161f, -0.1472614f), XMFLOAT2(0.3929697f, 0.3723543f), XMFLOAT2(0.7669163f, 0.9921276f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.4420706f, 0.9771487f), XMFLOAT2(0.5000001f, 0.7552916f), XMFLOAT2(0.8671016f, 0.5000001f), XMFLOAT2(0.009972572f, 0.2943302f), XMFLOAT2(0.2619076f, 0.5101888f)},
    { XMFLOAT2(0.6769902f, 0.2086229f), XMFLOAT2(0.6835508f, -0.1567148f), XMFLOAT2(0.1855643f, -0.1495191f), XMFLOAT2(0.5f, 0.1288463f), XMFLOAT2(0.8144357f, 1.149519f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.5f, 0.8711537f), XMFLOAT2(0.6796775f, 0.5f), XMFLOAT2(0.8671016f, 0.5000001f), XMFLOAT2(0.009972572f, 0.2943302f), XMFLOAT2(0.3203225f, 0.5f)},
    { XMFLOAT2(0.6769902f, 0.2086229f), XMFLOAT2(0.6835508f, -0.1567148f), XMFLOAT2(0.5289392f, -0.1094478f), XMFLOAT2(0.3406388f, 0.2315625f), XMFLOAT2(0.4710608f, 1.109448f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.1534573f, 0.9433081f), XMFLOAT2(0.6796775f, 0.5f), XMFLOAT2(0.6275454f, 0.7454566f), XMFLOAT2(0.8392965f, 0.1274699f), XMFLOAT2(0.3203225f, 0.5f)},
    { XMFLOAT2(0.4654129f, 0.286546f), XMFLOAT2(0.6835508f, -0.1567148f), XMFLOAT2(0.6561024f, -0.4812938f), XMFLOAT2(0.3406388f, 0.2315625f), XMFLOAT2(0.4557378f, 0.9357858f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.1787866f, 1.090081f), XMFLOAT2(0.2853085f, 0.5399212f), XMFLOAT2(0.5985888f, 0.5958804f), XMFLOAT2(0.9900271f, 0.2943302f), XMFLOAT2(0.3203225f, 0.5f)},
    { XMFLOAT2(0.6002011f, 0.588462f), XMFLOAT2(0.6282303f, 0.1420799f), XMFLOAT2(0.3717696f, 0.14208f), XMFLOAT2(0.3997989f, 0.5884621f), XMFLOAT2(0.7512438f, 1.393067f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2487562f, 1.393067f), XMFLOAT2(0.2853085f, 0.5399212f), XMFLOAT2(0.5985888f, 0.5958804f), XMFLOAT2(0.4999999f, -0.3879487f), XMFLOAT2(0.3203225f, 0.5f)},
    { XMFLOAT2(0.6002011f, 0.588462f), XMFLOAT2(0.6282303f, 0.1420799f), XMFLOAT2(0.3717696f, 0.14208f), XMFLOAT2(0.3997989f, 0.5884621f), XMFLOAT2(0.7512438f, 1.393067f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2487562f, 1.393067f), XMFLOAT2(0.5000001f, 1.002522f), XMFLOAT2(0.5985888f, 0.5958804f), XMFLOAT2(0.4999999f, -0.3879487f), XMFLOAT2(0.3203225f, 0.5f)},
    { XMFLOAT2(0.6002011f, 0.588462f), XMFLOAT2(0.672684f, -0.1472614f), XMFLOAT2(0.3717696f, 0.14208f), XMFLOAT2(0.3230098f, 0.208623f), XMFLOAT2(0.5579295f, 0.9771487f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.2330837f, 0.9921275f), XMFLOAT2(0.5000001f, 1.002522f), XMFLOAT2(0.7380924f, 0.5101888f), XMFLOAT2(0.4999999f, -0.3879487f), XMFLOAT2(0.3203225f, 0.5f)},
    { XMFLOAT2(0.5000001f, 0.1288463f), XMFLOAT2(0.8144358f, -0.1495191f), XMFLOAT2(0.3717696f, 0.14208f), XMFLOAT2(0.3230098f, 0.208623f), XMFLOAT2(0.5000001f, 0.8711537f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.1855644f, 1.149519f), XMFLOAT2(0.3203225f, 0.5f), XMFLOAT2(0.6796776f, 0.5f), XMFLOAT2(0.4999999f, -0.3879487f), XMFLOAT2(0.3203225f, 0.5f)},
    { XMFLOAT2(0.6482264f, 0.06698731f), XMFLOAT2(0.8144358f, -0.1495191f), XMFLOAT2(0.3717696f, 0.14208f), XMFLOAT2(0.3517736f, 0.06698737f), XMFLOAT2(0.6482264f, 0.9330127f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3517736f, 0.9330126f), XMFLOAT2(0.3203225f, 0.5f), XMFLOAT2(0.6796776f, 0.5f), XMFLOAT2(0.4999999f, -0.3879487f), XMFLOAT2(0.3203225f, 0.5f)},
    { XMFLOAT2(0.6482264f, 0.06698731f), XMFLOAT2(0.8144358f, -0.1495191f), XMFLOAT2(0.3717696f, 0.14208f), XMFLOAT2(0.3517736f, 0.06698737f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3517736f, 0.6767767f), XMFLOAT2(0.5f, 0.1464466f), XMFLOAT2(0.6796776f, 0.5f), XMFLOAT2(0.4999999f, -0.3879487f), XMFLOAT2(0.3203225f, 0.5f)},
    { XMFLOAT2(0.6482264f, 0.06698731f), XMFLOAT2(0.8144358f, -0.1495191f), XMFLOAT2(0.3717696f, 0.14208f), XMFLOAT2(0.3517736f, 0.06698737f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3517736f, 0.6767767f), XMFLOAT2(0.2903763f, 0.06698743f), XMFLOAT2(0.2903762f, 0.9330128f), XMFLOAT2(0.7096238f, 0.9330128f), XMFLOAT2(0.7096237f, 0.06698743f)},
    { XMFLOAT2(0.3554656f, 0.109037f), XMFLOAT2(0.8144358f, -0.1495191f), XMFLOAT2(0.3717696f, 0.14208f), XMFLOAT2(0.6445345f, 0.109037f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3517736f, 0.6767767f), XMFLOAT2(0.2903763f, 0.06698743f), XMFLOAT2(0.1473339f, 0.624455f), XMFLOAT2(0.5000001f, 0.9675102f), XMFLOAT2(0.8526661f, 0.6244549f)},
    { XMFLOAT2(0.6445344f, 0.109037f), XMFLOAT2(0.3554656f, 0.109037f), XMFLOAT2(0.3717696f, 0.14208f), XMFLOAT2(0.6445345f, 0.109037f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3517736f, 0.6767767f), XMFLOAT2(0.8526661f, 0.624455f), XMFLOAT2(0.1473339f, 0.624455f), XMFLOAT2(0.1473339f, 0.6244549f), XMFLOAT2(0.4999999f, 0.9675102f)},
    { XMFLOAT2(0.6445344f, 0.109037f), XMFLOAT2(0.2903761f, 0.1938138f), XMFLOAT2(0.3717696f, 0.14208f), XMFLOAT2(0.7096238f, 0.1938138f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3517736f, 0.6767767f), XMFLOAT2(0.8526661f, 0.624455f), XMFLOAT2(0.1473339f, 0.624455f), XMFLOAT2(0.2903761f, 0.8061863f), XMFLOAT2(0.7096238f, 0.8061863f)},
    { XMFLOAT2(0.6445344f, 0.109037f), XMFLOAT2(0.6445345f, 0.109037f), XMFLOAT2(0.3554656f, 0.109037f), XMFLOAT2(0.7096238f, 0.1938138f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3517736f, 0.6767767f), XMFLOAT2(0.5000001f, 0.9675102f), XMFLOAT2(0.8526662f, 0.6244549f), XMFLOAT2(0.2903761f, 0.8061863f), XMFLOAT2(0.1473339f, 0.624455f)},
    { XMFLOAT2(0.3203225f, 0.5000001f), XMFLOAT2(0.5f, 0.871154f), XMFLOAT2(0.6796775f, 0.5000001f), XMFLOAT2(0.5f, 0.1288463f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3517736f, 0.6767767f), XMFLOAT2(0.5000001f, 0.9675102f), XMFLOAT2(0.1855643f, 1.149519f), XMFLOAT2(0.2903761f, 0.8061863f), XMFLOAT2(0.8144357f, -0.149519f)},
    { XMFLOAT2(0.7096238f, 0.1938138f), XMFLOAT2(0.5f, 0.871154f), XMFLOAT2(0.2903762f, 0.1938138f), XMFLOAT2(0.5f, 0.1288463f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3517736f, 0.6767767f), XMFLOAT2(0.7096238f, 0.8061862f), XMFLOAT2(0.1855643f, 1.149519f), XMFLOAT2(0.2903761f, 0.8061863f), XMFLOAT2(0.2903762f, 0.8061862f)},
    { XMFLOAT2(0.7096238f, 0.1938138f), XMFLOAT2(0.5f, 0.871154f), XMFLOAT2(0.3517736f, 0.3232234f), XMFLOAT2(0.6482264f, 0.3232234f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3517736f, 0.6767767f), XMFLOAT2(0.7096238f, 0.8061862f), XMFLOAT2(0.1855643f, 1.149519f), XMFLOAT2(0.2903761f, 0.8061863f), XMFLOAT2(0.5f, 0.8535534f)},
    { XMFLOAT2(0.7096238f, 0.1938138f), XMFLOAT2(0.5f, 0.871154f), XMFLOAT2(0.6445343f, 0.109037f), XMFLOAT2(0.3554655f, 0.109037f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3517736f, 0.6767767f), XMFLOAT2(0.1473338f, 0.6244549f), XMFLOAT2(0.4999999f, 0.9675102f), XMFLOAT2(0.852666f, 0.624455f), XMFLOAT2(0.5f, 0.8535534f)},
    { XMFLOAT2(0.2903762f, 0.1938138f), XMFLOAT2(0.5f, 0.871154f), XMFLOAT2(0.7096238f, 0.1938138f), XMFLOAT2(0.3554655f, 0.109037f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3517736f, 0.6767767f), XMFLOAT2(0.1473338f, 0.6244549f), XMFLOAT2(0.2903762f, 0.8061862f), XMFLOAT2(0.7096238f, 0.8061862f), XMFLOAT2(0.5f, 0.8535534f)},
    { XMFLOAT2(0.3203225f, 0.5000001f), XMFLOAT2(0.5f, 0.871154f), XMFLOAT2(0.6796775f, 0.5000001f), XMFLOAT2(0.5f, 0.1288463f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3517736f, 0.6767767f), XMFLOAT2(0.1855643f, -0.149519f), XMFLOAT2(0.2903762f, 0.8061862f), XMFLOAT2(0.8144357f, 1.149519f), XMFLOAT2(0.5f, 0.8535534f)},
    { XMFLOAT2(0.3203225f, 0.5000001f), XMFLOAT2(0.3517736f, 0.3232233f), XMFLOAT2(0.6482264f, 0.3232233f), XMFLOAT2(0.5f, 0.1288463f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3517736f, 0.6767767f), XMFLOAT2(0.1855643f, -0.149519f), XMFLOAT2(0.2903762f, 0.8061862f), XMFLOAT2(0.4999999f, 0.8535534f), XMFLOAT2(0.5f, 0.8535534f)},
    { XMFLOAT2(0.3203225f, 0.5000001f), XMFLOAT2(0.7096238f, 0.1938138f), XMFLOAT2(0.6482264f, 0.3232233f), XMFLOAT2(0.2903762f, 0.1938139f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3517736f, 0.6767767f), XMFLOAT2(0.2903763f, 0.8061862f), XMFLOAT2(0.7096239f, 0.8061863f), XMFLOAT2(0.4999999f, 0.8535534f), XMFLOAT2(0.5f, 0.8535534f)},
    { XMFLOAT2(0.3517736f, 0.3232234f), XMFLOAT2(0.6482264f, 0.3232234f), XMFLOAT2(0.6482264f, 0.3232233f), XMFLOAT2(0.2903762f, 0.1938139f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3517736f, 0.6767767f), XMFLOAT2(0.2903763f, 0.8061862f), XMFLOAT2(0.5f, 0.8535534f), XMFLOAT2(0.4999999f, 0.8535534f), XMFLOAT2(0.5f, 0.8535534f)},
    { XMFLOAT2(0.6482264f, 0.3232234f), XMFLOAT2(0.6482264f, 0.3232234f), XMFLOAT2(0.6482264f, 0.3232233f), XMFLOAT2(0.3517736f, 0.3232234f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.6482264f, 0.6767766f), XMFLOAT2(0.6482264f, 0.6767767f), XMFLOAT2(0.3517736f, 0.6767767f), XMFLOAT2(0.5f, 0.8535534f), XMFLOAT2(0.5f, 0.8535534f), XMFLOAT2(0.4999999f, 0.8535534f), XMFLOAT2(0.5f, 0.8535534f)}
};

void Chunk::GenerateMarchingCubesMesh()
{
    PerlinNoise pn;

    std::vector<Vertex> vertices;
    std::vector<UINT> indices;
    std::vector<Node*> nodes;

    for (int x = 0; x <= size.x; x++)
    {
        float xPos = position.x + x;
        xPos -= (float)(size.x - 1) / 2.0f;

        for (int z = 0; z <= size.z; z++)
        {
            float zPos = position.z + z;
            zPos -= (float)(size.z - 1) / 2.0f;

            for (int y = 0; y <= size.y; y++)
            {
                float yPos = position.y + y;
                yPos -= (float)(size.y - 1) / 2.0f;

                float height = pn.noise(xPos * 0.1f, yPos * 0.25f, zPos * 0.1f) * 25.0f;
                float weight = yPos - height;

                int nCount = nodes.size();
                nodes.push_back(new Node(XMFLOAT3(xPos, yPos, zPos), weight));

                // Slightly different approach then im used to cause c++ breaks my brain...
                if (x > 0 && y > 0 && z > 0) {
                    // Figuring these out was so PAINFUL...
                    // I figured out the actual size thing real quick but...
                    // It took me far longer then I care to admit that the +1
                    // is needed due to the loops actually going <= size
                    Node* n0 = nodes.at(nCount - ((size.y + 1) * (size.z + 1)) - (size.z + 1) - 1);
                    Node* n1 = nodes.at(nCount - ((size.y + 1) * (size.z + 1)) - 1);
                    Node* n2 = nodes.at(nCount - 1);
                    Node* n3 = nodes.at(nCount - (size.z + 1) - 1);
                    Node* n4 = nodes.at(nCount - ((size.y + 1) * (size.z + 1)) - (size.z + 1));
                    Node* n5 = nodes.at(nCount - ((size.y + 1) * (size.z + 1)));
                    Node* n6 = nodes.at(nCount);
                    Node* n7 = nodes.at(nCount - (size.z + 1));

                    int cubeIndex = CubeIndex(n0, n1, n2, n3, n4, n5, n6, n7);

                    if (cubeIndex <= 0 || cubeIndex > 255) continue;

                    // Adress of the triangle array (essentially just the triagle array (this is for me not you))
                    int* triangles = triTable[cubeIndex];
                    int vertexCount = vertices.size();

                    for (int i = 0; i < 16; i++)
                    {
                        if (triangles[i] == -1)
                            break;

                        int triIndex = triangles[i];

                        Vertex v;
                        v.Position = GetAntiNode(triIndex, n0, n1, n2, n3, n4, n5, n6, n7);
                        v.UV = uvs[cubeIndex][triIndex];
                        v.Normal = XMFLOAT3(0.0f, 0.0f, 0.0f);
                        v.Tangent = XMFLOAT3(0.0f, 0.0f, 0.0f);

                        vertices.push_back(v);
                        indices.push_back(vertexCount + i);
                    }
                }
            }
        }
    }

    // Recalculate the normals
    for (int i = 0; i < indices.size(); i += 3)
    {
        int v0i = indices[i];
        int v1i = indices[i + 1];
        int v2i = indices[i + 2];
    
        XMFLOAT3 normal;
    
        XMVECTOR v0 = XMLoadFloat3(&vertices.at(v0i).Position);
        XMVECTOR v1 = XMLoadFloat3(&vertices.at(v1i).Position);
        XMVECTOR v2 = XMLoadFloat3(&vertices.at(v2i).Position);
        XMVECTOR normalVector = XMVector3Cross(v1 - v0, v2 - v0);
    
        // If they shared vertices
        //XMStoreFloat3(&vertices.at(v0i).Normal, XMVector3Normalize(XMLoadFloat3(&vertices.at(v0i).Normal) + normalVector));
        //XMStoreFloat3(&vertices.at(v1i).Normal, XMVector3Normalize(XMLoadFloat3(&vertices.at(v1i).Normal) + normalVector));
        //XMStoreFloat3(&vertices.at(v2i).Normal, XMVector3Normalize(XMLoadFloat3(&vertices.at(v2i).Normal) + normalVector));
    
        XMStoreFloat3(&vertices.at(v0i).Normal, normalVector);
        XMStoreFloat3(&vertices.at(v1i).Normal, normalVector);
        XMStoreFloat3(&vertices.at(v2i).Normal, normalVector);
    }

    for (auto& node : nodes) { delete node; }

    if (vertices.size() > 0 && indices.size() > 0) {
        chunkMesh = new Mesh(vertices.data(), vertices.size(), indices.data(), indices.size(), device, context);
        emptyChunk = false;
    }
    else {
        emptyChunk = true;
    }
}

int Chunk::CubeIndex(Node* n0, Node* n1, Node* n2, Node* n3, Node* n4, Node* n5, Node* n6, Node* n7)
{
	int cubeIndex = 0;
	if (n0->weight > 0) cubeIndex += 1;
	if (n1->weight > 0) cubeIndex += 2;
	if (n2->weight > 0) cubeIndex += 4;
	if (n3->weight > 0) cubeIndex += 8;
	if (n4->weight > 0) cubeIndex += 16;
	if (n5->weight > 0) cubeIndex += 32;
	if (n6->weight > 0) cubeIndex += 64;
	if (n7->weight > 0) cubeIndex += 128;
	return cubeIndex;
}

DirectX::XMFLOAT3 Chunk::GetAntiNode(int index, Node* n0, Node* n1, Node* n2, Node* n3, Node* n4, Node* n5, Node* n6, Node* n7)
{
    switch (index)
    {
        case 0:
            return Interpolate(n0, n1);
        case 1:
            return Interpolate(n1, n2);
        case 2:
            return Interpolate(n2, n3);
        case 3:
            return Interpolate(n3, n0);

        case 4:
            return Interpolate(n4, n5);
        case 5:
            return Interpolate(n5, n6);
        case 6:
            return Interpolate(n6, n7);
        case 7:
            return Interpolate(n7, n4);
        
        case 8:
            return Interpolate(n0, n4);
        case 9:
            return Interpolate(n1, n5);
        case 10:
            return Interpolate(n2, n6);
        case 11:
            return Interpolate(n3, n7);
    }

    return XMFLOAT3(0, 0, 0);
}


DirectX::XMFLOAT3 Chunk::Interpolate(Node* n0, Node* n1)
{
    float t = -n0->weight * (1.0f / (n1->weight - n0->weight));

    if (t < 0.0f) t = 0.0f;
    if (t > 1.0f) t = 1.0f;

    XMVECTOR v = XMVectorLerp(XMLoadFloat3(&n0->position), XMLoadFloat3(&n1->position), t);

    XMFLOAT3 interpolatedVector;
    XMStoreFloat3(&interpolatedVector, v);

    return interpolatedVector;
}

int Chunk::Index3Dto1D(int x, int y, int z)
{
	return x * size.x * size.y + y * size.y + z;
}
